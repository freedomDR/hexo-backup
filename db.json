{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"source/uploads/lufei001.png","path":"uploads/lufei001.png","modified":1,"renderable":0},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1511975200123},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1511975200123},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1511975200123},{"_id":"themes/next/.gitignore","hash":"0b5c2ffd41f66eb1849d6426ba8cf9649eeed329","modified":1511975200123},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1511975200123},{"_id":"themes/next/.javascript_ignore","hash":"8a224b381155f10e6eb132a4d815c5b52962a9d1","modified":1511975200123},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1511975200123},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1511975200123},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1511975200123},{"_id":"themes/next/.travis.yml","hash":"d60d4a5375fea23d53b2156b764a99b2e56fa660","modified":1511975200123},{"_id":"themes/next/README.md","hash":"529d53dfa97678f8ce4c95620b26e61154162a29","modified":1511975200123},{"_id":"themes/next/README.cn.md","hash":"02713071ef9e260b3fe77f4403942189d55a00e9","modified":1511975200123},{"_id":"themes/next/_config.yml","hash":"2b1c03fbc8f9dce7d81a1f4319fea0a6a735a08a","modified":1539312406825},{"_id":"themes/next/bower.json","hash":"6d6ae7531cf3fedc97c58cdad664f5793eb3cc88","modified":1511975200127},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1511975200127},{"_id":"themes/next/package.json","hash":"93a74dbc0fe3a1208a02e9cec3c15c2375339cc1","modified":1511975200127},{"_id":"source/_posts/2017-11:-day-selenium使用.md","hash":"15665cd2cde9a999f01c49b8b62114a1bcbffd38","modified":1512223165026},{"_id":"source/_posts/2017-11:-day-计算机网络.md","hash":"f06285567afe0383307bdfc121a98e521b99bb8b","modified":1511972781973},{"_id":"source/_posts/2017-12-15-形态学图像处理-基本形态学算法.md","hash":"f3eb924fb0a0250c9e90f39cbd13a8e1c6eccd32","modified":1513307718786},{"_id":"source/_posts/2017-12:-day-CMMI简单基础.md","hash":"7cbdfed04aa778935e9142837e2dd8729feed525","modified":1512224845674},{"_id":"source/_posts/2017-12:-day-形态学图像处理-击中和击不中变换.md","hash":"b6c5d2545e9a5fbecfb5cfcd474034e77cab894f","modified":1513306962046},{"_id":"source/_posts/2017-12:-day-形态学图像处理-开操作与闭操作.md","hash":"64261e5394603d55c72630dd3b60d48a73ececab","modified":1513136924785},{"_id":"source/_posts/2017-12:-day-形态学图像处理-腐蚀和膨胀.md","hash":"4859fffeca17749cdc267c54d9152dce1e74dc67","modified":1513132956084},{"_id":"source/_posts/2017-12:-day-形态学图像处理-预备知识.md","hash":"b68dc473560ac339f32a072135a1590d9a380798","modified":1513305304099},{"_id":"source/_posts/2018-04-06-opencv和matplotlib的一些小问题.md","hash":"98440b89c71b701b316ce2ccef86deff18798c74","modified":1523271815375},{"_id":"source/_posts/2017-11:-day-小橘子.md","hash":"e9e23905490aecb172b4efd52cd266f586c67d85","modified":1521537139639},{"_id":"source/_posts/2018-04-20-数论的小知识.md","hash":"6cf2bc8d8200f5fb6bd937ecbbb40729b86b2fd2","modified":1539053138656},{"_id":"source/_posts/2018-04-27-数学证明总结.md","hash":"f08bded4c12a6f932a1b6bd3dfdefdd0c211f35e","modified":1524804272000},{"_id":"source/_posts/2018-04-27-高斯滤波.md","hash":"37020b9e460813805c9b98208182d555da338c97","modified":1524804319016},{"_id":"source/_posts/2018-09-25-fenwick树.md","hash":"fa498826563c63d4b2db97addc4b0cc51f398601","modified":1539077355932},{"_id":"source/_posts/2018-10-09-快速幂.md","hash":"0c28f9527feb326850fc23c509a6f7987579233e","modified":1539076859580},{"_id":"source/_posts/2018-10-10-linux常用工具命令记录.md","hash":"769face8e84413b7871d677a86a91cbaf60817be","modified":1540086887280},{"_id":"source/_posts/2018-10-12-github小工具集合.md","hash":"7ee03d5b5abb8e6efa562f89fe8577ef5c844564","modified":1539521703016},{"_id":"source/_posts/2018-10-14-docker总结.md","hash":"f03e0dcff9a12fd065765af3f310f086473e7a9f","modified":1539573519304},{"_id":"source/_posts/2018-10-15-scrapy记录.md","hash":"4e51fb4a10c127ea221e2812b331e164dd534ed9","modified":1539674397087},{"_id":"source/_posts/2018-05-28-图像导数.md","hash":"8acfc41e1b9515610eab4cbf8c41ca8d29b8d8ab","modified":1527563932687},{"_id":"source/_posts/2018-10-15-vim小技巧.md","hash":"59aa4db9239ac45f33064c453630673a043a1af5","modified":1539571623171},{"_id":"source/_posts/2018-10-16-排序.md","hash":"46516012e8338a1a9f7bffa460a30843c3e70414","modified":1539677289223},{"_id":"source/_posts/2018-10-21-c-记录.md","hash":"46b9dab6f28d3da451cf13e58d78733d6095f000","modified":1540117111890},{"_id":"source/_posts/2018-10-21-codeforces记录.md","hash":"6dfa445846491c9fb27502a92f34985a8490d24b","modified":1540122556287},{"_id":"source/_posts/2018-10-19-0-1bfs.md","hash":"a4d1f2ed7d28735525d0e200e23e164b5b223e11","modified":1539921307029},{"_id":"source/_posts/2018-10-22-cf1072D.md","hash":"44aa3e648d528dea6d36251ebb9b669936d1bcc3","modified":1540202826627},{"_id":"source/categories/index.md","hash":"a8d38b5744a6c2d897e8c6db724d7eea93a6af66","modified":1511972608770},{"_id":"source/tags/index-1.md","hash":"db6f1f3b5aab05bdc79bfe4c127213a4accff9ad","modified":1539311516663},{"_id":"source/_posts/2018-10-22-path.md","hash":"72789c5c564d5013328f2c75c83229f3dcac5d8f","modified":1540203928747},{"_id":"source/tags/index.md","hash":"3b008af432cb7ec49253aa2b4ef169bd91b58818","modified":1511974088662},{"_id":"source/test-page/index.md","hash":"6bf97682459c361d6a62f54744c43e02618318bd","modified":1511969706794},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1511975200111},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1511975200111},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1511974630493},{"_id":"themes/next/.git/index","hash":"5462c6367111bff00fa1859853eae399d1a471ad","modified":1527520290986},{"_id":"themes/next/.git/packed-refs","hash":"f1fe33b8cdc221749eb26034a82b483cd86ef1b6","modified":1511975200107},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"3b5eafd32abb718e56ccf8d1cee0607ad8ce611d","modified":1511975200123},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"352093a1b210c72136687fd2eee649244cee402c","modified":1511975200123},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"902f627155a65099e0a37842ff396a58d0dc306f","modified":1511975200123},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1511975200123},{"_id":"themes/next/languages/de.yml","hash":"057e7df11ddeb1c8c15a5d7c5ff29430d725ec6b","modified":1511975200127},{"_id":"themes/next/languages/default.yml","hash":"44ef3f26917f467459326c2c8be2f73e4d947f35","modified":1511975200127},{"_id":"themes/next/languages/en.yml","hash":"7e680d9bb8f3a3a9d1ba1c9d312b3d257183dded","modified":1511975200127},{"_id":"themes/next/languages/fr-FR.yml","hash":"7e4eb7011b8feee641cfb11c6e73180b0ded1c0f","modified":1511975200127},{"_id":"themes/next/languages/id.yml","hash":"b5de1ea66dd9ef54cac9a1440eaa4e3f5fc011f5","modified":1511975200127},{"_id":"themes/next/languages/it.yml","hash":"aa595f2bda029f73ef7bfa104b4c55c3f4e9fb4c","modified":1511975200127},{"_id":"themes/next/languages/ja.yml","hash":"3c76e16fd19b262864475faa6854b718bc08c4d8","modified":1511975200127},{"_id":"themes/next/languages/ko.yml","hash":"ea5b46056e73ebcee121d5551627af35cbffc900","modified":1511975200127},{"_id":"themes/next/languages/nl-NL.yml","hash":"edca4f3598857dbc3cbf19ed412213329b6edd47","modified":1511975200127},{"_id":"themes/next/languages/pt-BR.yml","hash":"b1694ae766ed90277bcc4daca4b1cfa19cdcb72b","modified":1511975200127},{"_id":"themes/next/languages/pt.yml","hash":"44b61f2d085b827b507909a0b8f8ce31c6ef5d04","modified":1511975200127},{"_id":"themes/next/languages/ru.yml","hash":"98ec6f0b7183282e11cffc7ff586ceb82400dd75","modified":1511975200127},{"_id":"themes/next/languages/zh-Hans.yml","hash":"16ef56d0dea94638de7d200984c90ae56f26b4fe","modified":1511975200127},{"_id":"themes/next/languages/zh-hk.yml","hash":"9396f41ae76e4fef99b257c93c7354e661f6e0fa","modified":1511975200127},{"_id":"themes/next/languages/zh-tw.yml","hash":"50b71abb3ecc0686f9739e179e2f829cd074ecd9","modified":1511975200127},{"_id":"themes/next/layout/_layout.swig","hash":"da0929166674ea637e0ad454f85ad0d7bac4aff2","modified":1511975200127},{"_id":"themes/next/layout/archive.swig","hash":"f0a8225feafd971419837cdb4bcfec98a4a59b2f","modified":1511975200127},{"_id":"themes/next/layout/category.swig","hash":"4472255f4a3e3dd6d79201523a9526dcabdfbf18","modified":1511975200127},{"_id":"themes/next/layout/index.swig","hash":"783611349c941848a0e26ee2f1dc44dd14879bd1","modified":1511975200127},{"_id":"themes/next/layout/page.swig","hash":"969caaee05bdea725e99016eb63d810893a73e99","modified":1511975200127},{"_id":"themes/next/layout/post.swig","hash":"b3589a8e46288a10d20e41c7a5985d2493725aec","modified":1511975200127},{"_id":"themes/next/layout/schedule.swig","hash":"d86f8de4e118f8c4d778b285c140474084a271db","modified":1511975200127},{"_id":"themes/next/layout/tag.swig","hash":"7e0a7d7d832883eddb1297483ad22c184e4368de","modified":1511975200127},{"_id":"themes/next/scripts/merge-configs.js","hash":"cb617ddf692f56e6b6129564d52e302f50b28243","modified":1511975200127},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1511975200127},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1511975200151},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1511975200151},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1511975200151},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1511974630497},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1511974630497},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1511974630497},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1511974630497},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1511974630497},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1511974630497},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1511974630497},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1511974630497},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1511974630497},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1511974630493},{"_id":"themes/next/.git/logs/HEAD","hash":"8ea1191c154efca4b2bdad0fd215726ac298e788","modified":1511975200111},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1511975200127},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1511975200127},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"31322a7f57936cf2dc62e824af5490da5354cf02","modified":1511975200127},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"665a928604f99d2ba7dc4a4a9150178229568cc6","modified":1511975200127},{"_id":"themes/next/layout/_macro/post.swig","hash":"446a35a2cd389f8cfc3aa38973a9b44ad0740134","modified":1511975200127},{"_id":"themes/next/layout/_macro/reward.swig","hash":"56e8d8556cf474c56ae1bef9cb7bbd26554adb07","modified":1511975200127},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9efc455894921a66bbc074055d3b39c8a34a48a4","modified":1511975200127},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"39852700e4084ecccffa6d4669168e5cc0514c9e","modified":1511975200127},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4a6f5b1792b2e5262b7fdab9a716b3108e2f09c7","modified":1511975200127},{"_id":"themes/next/layout/_partials/footer.swig","hash":"c4d6181f5d3db5365e622f78714af8cc58d7a45e","modified":1511975200127},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b94fe8f3279daea5623c49ef4bb35917ba57510","modified":1511975200127},{"_id":"themes/next/layout/_partials/header.swig","hash":"ed042be6252848058c90109236ec988e392d91d4","modified":1511975200127},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1511975200127},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1511975200127},{"_id":"themes/next/layout/_partials/search.swig","hash":"9dbd378e94abfcb3f864a5b8dbbf18d212ca2ee0","modified":1511975200127},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1511975200127},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1511975200127},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"a266f96ad06ee87bdeae6e105a4b53cd587bbd04","modified":1511975200127},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1511975200127},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"7c04a42319d728be356746363aff8ea247791d24","modified":1511975200127},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1511975200127},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"5fe0447cc88a5a63b530cf0426f93c4634811876","modified":1511975200127},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"fc93b1a7e6aed0dddb1f3910142b48d8ab61174e","modified":1511975200127},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1511975200127},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"1ddb2336a1a19b47af3017047012c01ec5f54529","modified":1511975200127},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1511975200131},{"_id":"themes/next/scripts/tags/button.js","hash":"d023f10a00077f47082b0517e2ad666e6e994f60","modified":1511975200127},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1511975200127},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1511975200127},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1511975200127},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1511975200127},{"_id":"themes/next/scripts/tags/label.js","hash":"2f8f41a7316372f0d1ed6b51190dc4acd3e16fff","modified":1511975200127},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"eeeabede68cf263de9e6593ecf682f620da16f0a","modified":1511975200127},{"_id":"themes/next/scripts/tags/note.js","hash":"64de4e9d01cf3b491ffc7d53afdf148ee5ad9779","modified":1511975200127},{"_id":"themes/next/scripts/tags/tabs.js","hash":"5786545d51c38e8ca38d1bfc7dd9e946fc70a316","modified":1511975200127},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1511975200131},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1511975200131},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1511975200131},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1511975200131},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1511975200131},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1511975200131},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1511975200131},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1511975200131},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1511975200131},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1511975200131},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1511975200131},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1511975200131},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511975200131},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1511975200131},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1511975200131},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1511975200131},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1511975200131},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1511975200131},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200127},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200127},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1511975200131},{"_id":"themes/next/.git/refs/heads/master","hash":"53814d46a4f19b2e026339024c8c1e2f179bdb6c","modified":1511975200111},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1511975200127},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1511975200127},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"957701729b85fb0c5bfcf2fb99c19d54582f91ed","modified":1511975200127},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1511975200127},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1511975200127},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1511975200127},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1511975200127},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1511975200127},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"048fd5e98149469f8c28c21ba3561a7a67952c9b","modified":1511975200127},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1511975200127},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1511975200127},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"98df9d72e37dd071e882f2d5623c9d817815b139","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"18e7bef8923d83ea42df6c97405e515a876cede4","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a234c5cd1f75ca5731e814d0dbb92fdcf9240d1b","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"1cd01c6e92ab1913d48e556a92bb4f28b6dc4996","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"5e9bb24c750b49513d9a65799e832f07410002ac","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"fc65b9c98a0a8ab43a5e7aabff6c5f03838e09c8","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"0ddc94ed4ba0c19627765fdf1abc4d8efbe53d5a","modified":1511975200127},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"0e3378f7c39b2b0f69638290873ede6b6b6825c0","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"c316758546dc9ba6c60cb4d852c17ca6bb6d6724","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"10160daceaa6f1ecf632323d422ebe2caae49ddf","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"aa0629277d751c55c6d973e7691bf84af9b17a60","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"8a2e393d2e49f7bf560766d8a07cd461bf3fce4f","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"fcabbb241f894c9a6309c44e126cf3e8fea81fd4","modified":1511975200127},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"8b6650f77fe0a824c8075b2659e0403e0c78a705","modified":1511975200127},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"c747fb5c6b1f500e8f0c583e44195878b66e4e29","modified":1511975200127},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"385c066af96bee30be2459dbec8aae1f15d382f5","modified":1511975200127},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1511975200127},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1511975200127},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1511975200131},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"2aa5b7166a85a8aa34b17792ae4f58a5a96df6cc","modified":1511975200131},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"9ab65361ba0a12a986edd103e56492644c2db0b8","modified":1511975200131},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"82f9055955920ed88a2ab6a20ab02169abb2c634","modified":1511975200131},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"99fbb4686ea9a3e03a4726ed7cf4d8f529034452","modified":1511975200131},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"be087dcc060e8179f7e7f60ab4feb65817bd3d9f","modified":1511975200131},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"f29165e36489a87ba32d17dddfd2720d84e3f3ec","modified":1511975200131},{"_id":"themes/next/source/css/_variables/base.styl","hash":"29c261fa6b4046322559074d75239c6b272fb8a3","modified":1511975200131},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1511975200135},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1511975200135},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1511975200135},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1511975200139},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1511975200139},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1511975200139},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1511975200139},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1511975200147},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1511975200147},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1511975200139},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1511975200147},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"3ef0020a1815ca6151ea4886cd0d37421ae3695c","modified":1511975200147},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"9885fd9bea5e7ebafc5b1de9d17be5e106248d96","modified":1511975200147},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1511975200147},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1511975200147},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1511975200147},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1511975200151},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1511975200151},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1511975200151},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1511975200151},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1511975200151},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1511975200147},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1511975200147},{"_id":"source/uploads/lufei001.png","hash":"bcdc7cb4b9680f2ea66cde2027d760b378a14861","modified":1513134166501},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1511975200131},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1511975200131},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1511975200131},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1511975200131},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1511975200131},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1511975200131},{"_id":"themes/next/source/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1511975200131},{"_id":"themes/next/source/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1511975200131},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1511975200131},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1511975200131},{"_id":"themes/next/source/js/src/utils.js","hash":"dbdc3d1300eec7da9632608ebc0e5b697779dad7","modified":1511975200131},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1511975200147},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"8ea1191c154efca4b2bdad0fd215726ac298e788","modified":1511975200111},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1511975200111},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1511975200127},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4719ce717962663c5c33ef97b1119a0b3a4ecdc3","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"31050fc7a25784805b4843550151c93bfa55c9c8","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"7e509c7c28c59f905b847304dd3d14d94b6f3b8e","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"c5d48863f332ff8ce7c88dec2c893f709d7331d3","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1511975200131},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"f7c44b0ee46cf2cf82a4c9455ba8d8b55299976f","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"47a46583a1f3731157a3f53f80ed1ed5e2753e8e","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a280a583b7615e939aaddbf778f5c108ef8a2a6c","modified":1511975200131},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"18c3336ee3d09bd2da6a876e1336539f03d5a973","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"3b25edfa187d1bbbd0d38b50dd013cef54758abf","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"02fb8fa6b6c252b6bed469539cd057716606a787","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5b93958239d3d2bf9aeaede44eced2434d784462","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"bcf52192942c0afc410c74a0fb458e7936ddc3d5","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1511975200131},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1511975200139},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1511975200139},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1511975200139},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1511975200139},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1511975200139},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1511975200151},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1511975200151},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1511975200131},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1511975200135},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1511975200147},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1511975200147},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1511975200151},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"8ea1191c154efca4b2bdad0fd215726ac298e788","modified":1511975200111},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"7905a7f625702b45645d8be1268cb8af3f698c70","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"25dc25f61a232f03ca72472b7852f882448ec185","modified":1511975200127},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"f5aa2ba3bfffc15475e7e72a55b5c9d18609fdf5","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"e72a89e0f421444453e149ba32c77a64bd8e44e8","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"0f7f522cc6bfb3401d5afd62b0fcdf48bb2d604b","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"535b3b4f8cb1eec2558e094320e7dfb01f94c0e7","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"aea21141015ca8c409d8b33e3e34ec505f464e93","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"36332c8a91f089f545f3c3e8ea90d08aa4d6e60c","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"017074ef58166e2d69c53bb7590a0e7a8947a1ed","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"d5a4e4fc17f1f7e7c3a61b52d8e2e9677e139de7","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"e4055a0d2cd2b0ad9dc55928e2f3e7bd4e499da3","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"262debfd4442fa03d9919ceb88b948339df03fb0","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"0a6c0efffdf18bddbc1d1238feaed282b09cd0fe","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"89dd4f8b1f1cce3ad46cf2256038472712387d02","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"efa5e5022e205b52786ce495d4879f5e7b8f84b2","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"77c92a449ce84d558d26d052681f2e0dd77c70c9","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"f7784aba0c1cd20d824c918c120012d57a5eaa2a","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"50305b6ad7d09d2ffa4854e39f41ec1f4fe984fd","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"4a457d265d62f287c63d48764ce45d9bcfc9ec5a","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"ee7528900578ef4753effe05b346381c40de5499","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"32c9156bea5bac9e9ad0b4c08ffbca8b3d9aac4b","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"4ab5deed8c3b0c338212380f678f8382672e1bcb","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"ead0d0f2321dc71505788c7f689f92257cf14947","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"34935b40237c074be5f5e8818c14ccfd802b7439","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"cce6772e2cdb4db85d35486ae4c6c59367fbdd40","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"d89c4b562b528e4746696b2ad8935764d133bdae","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"a5e3e6b4b4b814a9fe40b34d784fed67d6d977fa","modified":1511975200131},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1ccfbd4d0f5754b2dc2719a91245c95f547a7652","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1511975200131},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1511975200131},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1511975200135},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1511975200135},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1511975200139},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1511975200139},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1511975200139},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1511975200143},{"_id":"themes/next/.git/objects/pack/pack-3e8fbd53ed32792bcf9f3e5cd2b5ae2bb5945831.idx","hash":"2f0c01f81d4f722953f00b9ca06917ef0022f849","modified":1511975199963},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1511975200135},{"_id":"themes/next/source/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1511975200151},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1511975200143},{"_id":"themes/next/.git/objects/pack/pack-3e8fbd53ed32792bcf9f3e5cd2b5ae2bb5945831.pack","hash":"b432fecb1de1217557c58587900e40d45007e20b","modified":1511975199959}],"Category":[{"name":"selenium","_id":"cjnk6oem40004expxm1jdddru"},{"name":"计算机网络","_id":"cjnk6oema000bexpxh4xl25s5"},{"name":"软件工程","_id":"cjnk6oemd000gexpxidgararp"},{"name":"标准","parent":"cjnk6oemd000gexpxidgararp","_id":"cjnk6oemh000qexpxwjqk2aa0"},{"name":"工程","_id":"cjnk6oeml000vexpx0m355t43"},{"name":"英语","_id":"cjnk6oemo0012expxej9av2ae"},{"name":"算法","_id":"cjnk6oemr0019expxxnaj9y63"}],"Data":[],"Page":[{"title":"categories","date":"2017-11-29T16:23:03.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-11-30 00:23:03\ntype: \"categories\"\n---\n","updated":"2017-11-29T16:23:28.770Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cjnk6oem10001expxrx9ci5ss","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2018-10-12T02:31:56.000Z","_content":"","source":"tags/index-1.md","raw":"---\ntitle: tags\ndate: 2018-10-12 10:31:56\n---\n","updated":"2018-10-12T02:31:56.663Z","path":"tags/index-1.html","comments":1,"layout":"page","_id":"cjnk6oem30003expx1bljxb1b","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-11-29T16:13:05.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-11-30 00:13:05\ntype: \"tags\"\n---\n","updated":"2017-11-29T16:48:08.662Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cjnk6oem60007expxbpv09bmk","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"test_page","date":"2017-11-09T04:50:24.000Z","_content":"test","source":"test-page/index.md","raw":"---\ntitle: test_page\ndate: 2017-11-09 12:50:24\n---\ntest","updated":"2017-11-29T15:35:06.794Z","path":"test-page/index.html","comments":1,"layout":"page","_id":"cjnk6oem80009expxuvso1wx0","content":"<p>test</p>\n","site":{"data":{}},"excerpt":"","more":"<p>test</p>\n"}],"Post":[{"title":"selenium简单基础","mathjax":true,"date":"2017-11-30T03:41:39.000Z","_content":"selenium工具集 是一个强大的web自动化测试工具，支持远程分布式并发进行测试和多版本，多环境，多浏览器测试   。\n","source":"_posts/2017-11:-day-selenium使用.md","raw":"---\ntitle: selenium简单基础\nmathjax: true\ndate: 2017-11-30 11:41:39\ntags: \n    - 技术\n    - 概念\ncategories: \n    - selenium\n---\nselenium工具集 是一个强大的web自动化测试工具，支持远程分布式并发进行测试和多版本，多环境，多浏览器测试   。\n","slug":"2017-11-day-selenium使用","published":1,"updated":"2017-12-02T13:59:25.026Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oelx0000expxj3vhs9si","content":"<p>selenium工具集 是一个强大的web自动化测试工具，支持远程分布式并发进行测试和多版本，多环境，多浏览器测试   。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>selenium工具集 是一个强大的web自动化测试工具，支持远程分布式并发进行测试和多版本，多环境，多浏览器测试   。</p>\n"},{"title":"计算机网络","date":"2017-11-09T06:36:31.000Z","mathjax":true,"_content":"- 第一章 **概述**\n>总时延 = 发送时延 + 传播时延 + 处理时延\n>发送时延(传输时延) = 数据块长度/信道带宽(传输速率)\n>传播时延 = 信道长度/传播速率\n>处理时延\n- 第二章 **物理层**\n>比特率 波特率（码元的传输速率）\n>奈奎斯特定理 $c=2H\\log_{2}{v}$ 码元传输速率 波特率\n>香农定理 $c=H\\log_{2}{1+S/N}$ 信息传输速率 比特率\n>分组交换 一种存储转发方式 还有报文交换类似（很少使用）\n>电路交换 类似于电话一样提前建立专用通道\n- 第三章 **数据链路层**\n>三种服务 无确认无连接 有确认无连接 有确认有连接\n>arq协议 停止等待arq协议 自动重发arq协议 选择重发arq协议\n- 第四章 MAC子层\n>ALOHA协议\n>CSMA协议\n>以太网协议\n>无线局域网协议\n- 第五章 网络层\n>虚电路服务与数据报服务\n>路由算法\n>BellmanFord算法\n>迪斯卡尔算法\n>距离矢量协议和链路状态路由协议\n- 第六章 传输层\n>三次握手\n>流量控制和缓冲策略\n>tcp拥塞控制\n>连接释放过程","source":"_posts/2017-11:-day-计算机网络.md","raw":"---\ntitle: 计算机网络\ndate: 2017-11-09 14:36:31\nmathjax: true\ncategories: 计算机网络\n---\n- 第一章 **概述**\n>总时延 = 发送时延 + 传播时延 + 处理时延\n>发送时延(传输时延) = 数据块长度/信道带宽(传输速率)\n>传播时延 = 信道长度/传播速率\n>处理时延\n- 第二章 **物理层**\n>比特率 波特率（码元的传输速率）\n>奈奎斯特定理 $c=2H\\log_{2}{v}$ 码元传输速率 波特率\n>香农定理 $c=H\\log_{2}{1+S/N}$ 信息传输速率 比特率\n>分组交换 一种存储转发方式 还有报文交换类似（很少使用）\n>电路交换 类似于电话一样提前建立专用通道\n- 第三章 **数据链路层**\n>三种服务 无确认无连接 有确认无连接 有确认有连接\n>arq协议 停止等待arq协议 自动重发arq协议 选择重发arq协议\n- 第四章 MAC子层\n>ALOHA协议\n>CSMA协议\n>以太网协议\n>无线局域网协议\n- 第五章 网络层\n>虚电路服务与数据报服务\n>路由算法\n>BellmanFord算法\n>迪斯卡尔算法\n>距离矢量协议和链路状态路由协议\n- 第六章 传输层\n>三次握手\n>流量控制和缓冲策略\n>tcp拥塞控制\n>连接释放过程","slug":"2017-11-day-计算机网络","published":1,"updated":"2017-11-29T16:26:21.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oem20002expxdd8pkool","content":"<ul>\n<li>第一章 <strong>概述</strong><blockquote>\n<p>总时延 = 发送时延 + 传播时延 + 处理时延<br>发送时延(传输时延) = 数据块长度/信道带宽(传输速率)<br>传播时延 = 信道长度/传播速率<br>处理时延</p>\n</blockquote>\n</li>\n<li>第二章 <strong>物理层</strong><blockquote>\n<p>比特率 波特率（码元的传输速率）<br>奈奎斯特定理 $c=2H\\log<em>{2}{v}$ 码元传输速率 波特率<br>香农定理 $c=H\\log</em>{2}{1+S/N}$ 信息传输速率 比特率<br>分组交换 一种存储转发方式 还有报文交换类似（很少使用）<br>电路交换 类似于电话一样提前建立专用通道</p>\n</blockquote>\n</li>\n<li>第三章 <strong>数据链路层</strong><blockquote>\n<p>三种服务 无确认无连接 有确认无连接 有确认有连接<br>arq协议 停止等待arq协议 自动重发arq协议 选择重发arq协议</p>\n</blockquote>\n</li>\n<li>第四章 MAC子层<blockquote>\n<p>ALOHA协议<br>CSMA协议<br>以太网协议<br>无线局域网协议</p>\n</blockquote>\n</li>\n<li>第五章 网络层<blockquote>\n<p>虚电路服务与数据报服务<br>路由算法<br>BellmanFord算法<br>迪斯卡尔算法<br>距离矢量协议和链路状态路由协议</p>\n</blockquote>\n</li>\n<li>第六章 传输层<blockquote>\n<p>三次握手<br>流量控制和缓冲策略<br>tcp拥塞控制<br>连接释放过程</p>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>第一章 <strong>概述</strong><blockquote>\n<p>总时延 = 发送时延 + 传播时延 + 处理时延<br>发送时延(传输时延) = 数据块长度/信道带宽(传输速率)<br>传播时延 = 信道长度/传播速率<br>处理时延</p>\n</blockquote>\n</li>\n<li>第二章 <strong>物理层</strong><blockquote>\n<p>比特率 波特率（码元的传输速率）<br>奈奎斯特定理 $c=2H\\log<em>{2}{v}$ 码元传输速率 波特率<br>香农定理 $c=H\\log</em>{2}{1+S/N}$ 信息传输速率 比特率<br>分组交换 一种存储转发方式 还有报文交换类似（很少使用）<br>电路交换 类似于电话一样提前建立专用通道</p>\n</blockquote>\n</li>\n<li>第三章 <strong>数据链路层</strong><blockquote>\n<p>三种服务 无确认无连接 有确认无连接 有确认有连接<br>arq协议 停止等待arq协议 自动重发arq协议 选择重发arq协议</p>\n</blockquote>\n</li>\n<li>第四章 MAC子层<blockquote>\n<p>ALOHA协议<br>CSMA协议<br>以太网协议<br>无线局域网协议</p>\n</blockquote>\n</li>\n<li>第五章 网络层<blockquote>\n<p>虚电路服务与数据报服务<br>路由算法<br>BellmanFord算法<br>迪斯卡尔算法<br>距离矢量协议和链路状态路由协议</p>\n</blockquote>\n</li>\n<li>第六章 传输层<blockquote>\n<p>三次握手<br>流量控制和缓冲策略<br>tcp拥塞控制<br>连接释放过程</p>\n</blockquote>\n</li>\n</ul>\n"},{"title":"形态学图像处理-基本形态学算法","mathjax":true,"date":"2017-12-15T03:14:23.000Z","_content":"","source":"_posts/2017-12-15-形态学图像处理-基本形态学算法.md","raw":"---\ntitle: 形态学图像处理-基本形态学算法\nmathjax: true\ndate: 2017-12-15 11:14:23\n---\n","slug":"形态学图像处理-基本形态学算法","published":1,"updated":"2017-12-15T03:15:18.786Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oem60006expxd8588vq7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"CMMI简单基础","mathjax":true,"date":"2017-12-02T14:25:57.000Z","_content":"\n","source":"_posts/2017-12:-day-CMMI简单基础.md","raw":"---\ntitle: CMMI简单基础\nmathjax: true\ndate: 2017-12-02 22:25:57\ntags: \n- 软件工程\ncategories:\n- 软件工程\n- 标准\n---\n\n","slug":"2017-12-day-CMMI简单基础","published":1,"updated":"2017-12-02T14:27:25.674Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oem70008expx6paa83du","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"形态学图像处理-击中和击不中变换","mathjax":true,"date":"2017-12-15T02:37:54.000Z","_content":"形态学击中和击不中变换是形状检测的一个基本工具。\n假设集合C，D，E，它们相互独立，集合$A = C \\cup D \\cup E$，集合B为D及其背景组成的集合，集合W等于集合B，则B在A中的匹配表示为$A \\circledast B$，即$A \\circledast B = (A \\ominus D) \\cap \\[A^c \\ominus (W - D)\\]$。\n令$B = (B_1, B_2), B_1 = D, B_2 = (W - D)$，则$A \\circledast B = (A \\ominus B_1) \\cup (A_c \\ominus B_2)$\n根据腐蚀和膨胀的对偶关系，还可以表示为$A \\circledast B = (A \\ominus B_1) \\cup (A \\oplus \\hat{B}_2)$。\n","source":"_posts/2017-12:-day-形态学图像处理-击中和击不中变换.md","raw":"---\ntitle: 形态学图像处理-击中和击不中变换\nmathjax: true\ndate: 2017-12-15 10:37:54\ntag:\n- 数字图像处理\n---\n形态学击中和击不中变换是形状检测的一个基本工具。\n假设集合C，D，E，它们相互独立，集合$A = C \\cup D \\cup E$，集合B为D及其背景组成的集合，集合W等于集合B，则B在A中的匹配表示为$A \\circledast B$，即$A \\circledast B = (A \\ominus D) \\cap \\[A^c \\ominus (W - D)\\]$。\n令$B = (B_1, B_2), B_1 = D, B_2 = (W - D)$，则$A \\circledast B = (A \\ominus B_1) \\cup (A_c \\ominus B_2)$\n根据腐蚀和膨胀的对偶关系，还可以表示为$A \\circledast B = (A \\ominus B_1) \\cup (A \\oplus \\hat{B}_2)$。\n","slug":"2017-12-day-形态学图像处理-击中和击不中变换","published":1,"updated":"2017-12-15T03:02:42.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oem9000aexpx709fffwy","content":"<p>形态学击中和击不中变换是形状检测的一个基本工具。<br>假设集合C，D，E，它们相互独立，集合$A = C \\cup D \\cup E$，集合B为D及其背景组成的集合，集合W等于集合B，则B在A中的匹配表示为$A \\circledast B$，即$A \\circledast B = (A \\ominus D) \\cap [A^c \\ominus (W - D)]$。<br>令$B = (B_1, B_2), B_1 = D, B_2 = (W - D)$，则$A \\circledast B = (A \\ominus B_1) \\cup (A_c \\ominus B_2)$<br>根据腐蚀和膨胀的对偶关系，还可以表示为$A \\circledast B = (A \\ominus B_1) \\cup (A \\oplus \\hat{B}_2)$。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>形态学击中和击不中变换是形状检测的一个基本工具。<br>假设集合C，D，E，它们相互独立，集合$A = C \\cup D \\cup E$，集合B为D及其背景组成的集合，集合W等于集合B，则B在A中的匹配表示为$A \\circledast B$，即$A \\circledast B = (A \\ominus D) \\cap [A^c \\ominus (W - D)]$。<br>令$B = (B_1, B_2), B_1 = D, B_2 = (W - D)$，则$A \\circledast B = (A \\ominus B_1) \\cup (A_c \\ominus B_2)$<br>根据腐蚀和膨胀的对偶关系，还可以表示为$A \\circledast B = (A \\ominus B_1) \\cup (A \\oplus \\hat{B}_2)$。</p>\n"},{"title":"形态学图像处理-开操作与闭操作","mathjax":true,"date":"2017-12-13T02:33:06.000Z","_content":"[预备知识](../形态学图像处理-预备知识)\n- 开操作\n假设集合A和B，开操作是B对A先腐蚀后膨胀，数学定义为 $A \\circ B = (A \\ominus B) \\oplus B$， 等价于$A \\circ B = \\bigcup \\\\{ (B)_z | (B)_z \\subseteq A\\\\}$\n- 闭操作\n假设集合A和B，开操作是B对A先膨胀后腐蚀，数学定义为 $A \\bullet B = (A \\oplus B) \\ominus B$\n***\n类似于膨胀和腐蚀，由定义及膨胀和腐蚀的对偶性质，可以证明开操作与闭操作彼此关于集合求补和反射也是对偶的，即$(A \\bullet B)^c = (A^c \\circ \\hat{B})$ 和 $(A \\circ B)^c = (A^c \\bullet \\hat{B})$","source":"_posts/2017-12:-day-形态学图像处理-开操作与闭操作.md","raw":"---\ntitle: 形态学图像处理-开操作与闭操作\nmathjax: true\ndate: 2017-12-13 10:33:06\ntag:\n- 数字图像处理\n---\n[预备知识](../形态学图像处理-预备知识)\n- 开操作\n假设集合A和B，开操作是B对A先腐蚀后膨胀，数学定义为 $A \\circ B = (A \\ominus B) \\oplus B$， 等价于$A \\circ B = \\bigcup \\\\{ (B)_z | (B)_z \\subseteq A\\\\}$\n- 闭操作\n假设集合A和B，开操作是B对A先膨胀后腐蚀，数学定义为 $A \\bullet B = (A \\oplus B) \\ominus B$\n***\n类似于膨胀和腐蚀，由定义及膨胀和腐蚀的对偶性质，可以证明开操作与闭操作彼此关于集合求补和反射也是对偶的，即$(A \\bullet B)^c = (A^c \\circ \\hat{B})$ 和 $(A \\circ B)^c = (A^c \\bullet \\hat{B})$","slug":"2017-12-day-形态学图像处理-开操作与闭操作","published":1,"updated":"2017-12-13T03:48:44.785Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemb000dexpxgrl0sci9","content":"<p><a href=\"../形态学图像处理-预备知识\">预备知识</a></p>\n<ul>\n<li>开操作<br>假设集合A和B，开操作是B对A先腐蚀后膨胀，数学定义为 $A \\circ B = (A \\ominus B) \\oplus B$， 等价于$A \\circ B = \\bigcup \\{ (B)_z | (B)_z \\subseteq A\\}$</li>\n<li>闭操作<br>假设集合A和B，开操作是B对A先膨胀后腐蚀，数学定义为 $A \\bullet B = (A \\oplus B) \\ominus B$</li>\n</ul>\n<hr>\n<p>类似于膨胀和腐蚀，由定义及膨胀和腐蚀的对偶性质，可以证明开操作与闭操作彼此关于集合求补和反射也是对偶的，即$(A \\bullet B)^c = (A^c \\circ \\hat{B})$ 和 $(A \\circ B)^c = (A^c \\bullet \\hat{B})$</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"../形态学图像处理-预备知识\">预备知识</a></p>\n<ul>\n<li>开操作<br>假设集合A和B，开操作是B对A先腐蚀后膨胀，数学定义为 $A \\circ B = (A \\ominus B) \\oplus B$， 等价于$A \\circ B = \\bigcup \\{ (B)_z | (B)_z \\subseteq A\\}$</li>\n<li>闭操作<br>假设集合A和B，开操作是B对A先膨胀后腐蚀，数学定义为 $A \\bullet B = (A \\oplus B) \\ominus B$</li>\n</ul>\n<hr>\n<p>类似于膨胀和腐蚀，由定义及膨胀和腐蚀的对偶性质，可以证明开操作与闭操作彼此关于集合求补和反射也是对偶的，即$(A \\bullet B)^c = (A^c \\circ \\hat{B})$ 和 $(A \\circ B)^c = (A^c \\bullet \\hat{B})$</p>\n"},{"title":"形态学图像处理-腐蚀和膨胀","mathjax":true,"date":"2017-12-12T14:52:10.000Z","_content":"[预备知识](../形态学图像处理-预备知识)\n- 腐蚀\n假设集合A和B， B对A的腐蚀定义为 $A \\ominus B = \\\\{ z | (B)_z \\subseteq A \\\\} $\n由定义可以看出，B对A的腐蚀是一个用z平移的B包含在A中的所有点z的集合，等价于 $A \\ominus B = \\\\{ z | (B)_z \\cap A^c = \\varnothing \\\\}$\n- 膨胀\n假设集合A和B， B对A的膨胀定义为 $A \\oplus B = \\\\{ z | \\[(\\hat{B})_z \\cap A^c\\] = \\varnothing \\\\}$\n同理，B对A的膨胀是所有位移z的集合，并且以z对集合B的反射进行平移之后得到的集合与A至少有一个元素是重叠的，等价于 $A \\oplus B = \\\\{z | \\[(\\hat{b})_z \\cap A\\] \\subseteq A\\\\}$\n***\n由定义易证，膨胀和腐蚀关于集合求补运算和反射运算是对偶的，即\n> $(A \\ominus B)^c = A^c \\oplus \\hat{B}$\n> $(A \\oplus B)^c = A^c \\ominus \\hat{B}$","source":"_posts/2017-12:-day-形态学图像处理-腐蚀和膨胀.md","raw":"---\ntitle: 形态学图像处理-腐蚀和膨胀\nmathjax: true\ndate: 2017-12-12 22:52:10\ntags:\n- 数字图像处理\n---\n[预备知识](../形态学图像处理-预备知识)\n- 腐蚀\n假设集合A和B， B对A的腐蚀定义为 $A \\ominus B = \\\\{ z | (B)_z \\subseteq A \\\\} $\n由定义可以看出，B对A的腐蚀是一个用z平移的B包含在A中的所有点z的集合，等价于 $A \\ominus B = \\\\{ z | (B)_z \\cap A^c = \\varnothing \\\\}$\n- 膨胀\n假设集合A和B， B对A的膨胀定义为 $A \\oplus B = \\\\{ z | \\[(\\hat{B})_z \\cap A^c\\] = \\varnothing \\\\}$\n同理，B对A的膨胀是所有位移z的集合，并且以z对集合B的反射进行平移之后得到的集合与A至少有一个元素是重叠的，等价于 $A \\oplus B = \\\\{z | \\[(\\hat{b})_z \\cap A\\] \\subseteq A\\\\}$\n***\n由定义易证，膨胀和腐蚀关于集合求补运算和反射运算是对偶的，即\n> $(A \\ominus B)^c = A^c \\oplus \\hat{B}$\n> $(A \\oplus B)^c = A^c \\ominus \\hat{B}$","slug":"2017-12-day-形态学图像处理-腐蚀和膨胀","published":1,"updated":"2017-12-13T02:42:36.084Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemc000eexpxelb6siw5","content":"<p><a href=\"../形态学图像处理-预备知识\">预备知识</a></p>\n<ul>\n<li>腐蚀<br>假设集合A和B， B对A的腐蚀定义为 $A \\ominus B = \\{ z | (B)_z \\subseteq A \\} $<br>由定义可以看出，B对A的腐蚀是一个用z平移的B包含在A中的所有点z的集合，等价于 $A \\ominus B = \\{ z | (B)_z \\cap A^c = \\varnothing \\}$</li>\n<li>膨胀<br>假设集合A和B， B对A的膨胀定义为 $A \\oplus B = \\{ z | [(\\hat{B})_z \\cap A^c] = \\varnothing \\}$<br>同理，B对A的膨胀是所有位移z的集合，并且以z对集合B的反射进行平移之后得到的集合与A至少有一个元素是重叠的，等价于 $A \\oplus B = \\{z | [(\\hat{b})_z \\cap A] \\subseteq A\\}$</li>\n</ul>\n<hr>\n<p>由定义易证，膨胀和腐蚀关于集合求补运算和反射运算是对偶的，即</p>\n<blockquote>\n<p>$(A \\ominus B)^c = A^c \\oplus \\hat{B}$<br>$(A \\oplus B)^c = A^c \\ominus \\hat{B}$</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"../形态学图像处理-预备知识\">预备知识</a></p>\n<ul>\n<li>腐蚀<br>假设集合A和B， B对A的腐蚀定义为 $A \\ominus B = \\{ z | (B)_z \\subseteq A \\} $<br>由定义可以看出，B对A的腐蚀是一个用z平移的B包含在A中的所有点z的集合，等价于 $A \\ominus B = \\{ z | (B)_z \\cap A^c = \\varnothing \\}$</li>\n<li>膨胀<br>假设集合A和B， B对A的膨胀定义为 $A \\oplus B = \\{ z | [(\\hat{B})_z \\cap A^c] = \\varnothing \\}$<br>同理，B对A的膨胀是所有位移z的集合，并且以z对集合B的反射进行平移之后得到的集合与A至少有一个元素是重叠的，等价于 $A \\oplus B = \\{z | [(\\hat{b})_z \\cap A] \\subseteq A\\}$</li>\n</ul>\n<hr>\n<p>由定义易证，膨胀和腐蚀关于集合求补运算和反射运算是对偶的，即</p>\n<blockquote>\n<p>$(A \\ominus B)^c = A^c \\oplus \\hat{B}$<br>$(A \\oplus B)^c = A^c \\ominus \\hat{B}$</p>\n</blockquote>\n"},{"title":"形态学图像处理-预备知识","mathjax":true,"date":"2017-12-12T15:24:45.000Z","_content":"一些基本概念的简单阐述：\n$Z^2$表示二维整数空间。\n$\\hat{B}$表示集合B的反射，即 $\\hat{B} = \\\\{ w | w = -b , b \\in B\\\\}$。\n$(B)_z$表示集合B在点z的基础上平移之后形成的集合，即 $(B)_z = \\\\{ c | c = b + z, b \\in B\\\\}$。","source":"_posts/2017-12:-day-形态学图像处理-预备知识.md","raw":"---\ntitle: 形态学图像处理-预备知识\nmathjax: true\ndate: 2017-12-12 23:24:45\ntag:\n- 数字图像处理\n---\n一些基本概念的简单阐述：\n$Z^2$表示二维整数空间。\n$\\hat{B}$表示集合B的反射，即 $\\hat{B} = \\\\{ w | w = -b , b \\in B\\\\}$。\n$(B)_z$表示集合B在点z的基础上平移之后形成的集合，即 $(B)_z = \\\\{ c | c = b + z, b \\in B\\\\}$。","slug":"2017-12-day-形态学图像处理-预备知识","published":1,"updated":"2017-12-15T02:35:04.099Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oeme000iexpxvhmmajbf","content":"<p>一些基本概念的简单阐述：<br>$Z^2$表示二维整数空间。<br>$\\hat{B}$表示集合B的反射，即 $\\hat{B} = \\{ w | w = -b , b \\in B\\}$。<br>$(B)_z$表示集合B在点z的基础上平移之后形成的集合，即 $(B)_z = \\{ c | c = b + z, b \\in B\\}$。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一些基本概念的简单阐述：<br>$Z^2$表示二维整数空间。<br>$\\hat{B}$表示集合B的反射，即 $\\hat{B} = \\{ w | w = -b , b \\in B\\}$。<br>$(B)_z$表示集合B在点z的基础上平移之后形成的集合，即 $(B)_z = \\{ c | c = b + z, b \\in B\\}$。</p>\n"},{"title":"opencv和matplotlib的一些小问题","mathjax":true,"date":"2018-04-06T10:49:03.000Z","_content":"[问题参考](https://stackoverflow.com/questions/15072736/extracting-a-region-from-an-image-using-slicing-in-python-opencv/15074748#15074748)\n- opencv\n当调用opencv的imread函数读取图像时，若读取彩色图像，返回的彩色图像以BGR顺序保存，而不是\n我们常见的RGB形式保存。\n- matplotlib\n当调用pylot的imshow函数显示彩色图像时，默认是以RGB形式显示的，所以用opencv打开的图像需要做进一步处理方可正常显示。\n- 解决方法 **BGR ----> RGB**\n    -  b, g, r = cv2.split(img)\n        img = cv2.merge(\\[r, g, b\\]) 从代码来看，就是更换顺序再合并\n    -  img = img\\[:, :, ::-1\\] or img = img\\[..., ::-1\\] 这种方式利用了numpy的切片操作， 代码就是反转第三维数列，（img数据类型要注意，为np.ndarray）\n    -  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) 调用官方API\n","source":"_posts/2018-04-06-opencv和matplotlib的一些小问题.md","raw":"---\ntitle: opencv和matplotlib的一些小问题\nmathjax: true\ndate: 2018-04-06 18:49:03\ncategories:\n- 工程\ntags:\n- python3\n- opencv3\n- matplotlib\n---\n[问题参考](https://stackoverflow.com/questions/15072736/extracting-a-region-from-an-image-using-slicing-in-python-opencv/15074748#15074748)\n- opencv\n当调用opencv的imread函数读取图像时，若读取彩色图像，返回的彩色图像以BGR顺序保存，而不是\n我们常见的RGB形式保存。\n- matplotlib\n当调用pylot的imshow函数显示彩色图像时，默认是以RGB形式显示的，所以用opencv打开的图像需要做进一步处理方可正常显示。\n- 解决方法 **BGR ----> RGB**\n    -  b, g, r = cv2.split(img)\n        img = cv2.merge(\\[r, g, b\\]) 从代码来看，就是更换顺序再合并\n    -  img = img\\[:, :, ::-1\\] or img = img\\[..., ::-1\\] 这种方式利用了numpy的切片操作， 代码就是反转第三维数列，（img数据类型要注意，为np.ndarray）\n    -  img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) 调用官方API\n","slug":"opencv和matplotlib的一些小问题","published":1,"updated":"2018-04-09T11:03:35.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemf000kexpxpk2bv3l4","content":"<p><a href=\"https://stackoverflow.com/questions/15072736/extracting-a-region-from-an-image-using-slicing-in-python-opencv/15074748#15074748\" target=\"_blank\" rel=\"external\">问题参考</a></p>\n<ul>\n<li>opencv<br>当调用opencv的imread函数读取图像时，若读取彩色图像，返回的彩色图像以BGR顺序保存，而不是<br>我们常见的RGB形式保存。</li>\n<li>matplotlib<br>当调用pylot的imshow函数显示彩色图像时，默认是以RGB形式显示的，所以用opencv打开的图像需要做进一步处理方可正常显示。</li>\n<li>解决方法 <strong>BGR —-&gt; RGB</strong><ul>\n<li>b, g, r = cv2.split(img)<br> img = cv2.merge([r, g, b]) 从代码来看，就是更换顺序再合并</li>\n<li>img = img[:, :, ::-1] or img = img[…, ::-1] 这种方式利用了numpy的切片操作， 代码就是反转第三维数列，（img数据类型要注意，为np.ndarray）</li>\n<li>img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) 调用官方API</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://stackoverflow.com/questions/15072736/extracting-a-region-from-an-image-using-slicing-in-python-opencv/15074748#15074748\" target=\"_blank\" rel=\"external\">问题参考</a></p>\n<ul>\n<li>opencv<br>当调用opencv的imread函数读取图像时，若读取彩色图像，返回的彩色图像以BGR顺序保存，而不是<br>我们常见的RGB形式保存。</li>\n<li>matplotlib<br>当调用pylot的imshow函数显示彩色图像时，默认是以RGB形式显示的，所以用opencv打开的图像需要做进一步处理方可正常显示。</li>\n<li>解决方法 <strong>BGR —-&gt; RGB</strong><ul>\n<li>b, g, r = cv2.split(img)<br> img = cv2.merge([r, g, b]) 从代码来看，就是更换顺序再合并</li>\n<li>img = img[:, :, ::-1] or img = img[…, ::-1] 这种方式利用了numpy的切片操作， 代码就是反转第三维数列，（img数据类型要注意，为np.ndarray）</li>\n<li>img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB) 调用官方API</li>\n</ul>\n</li>\n</ul>\n"},{"title":"小橘子","mathjax":true,"date":"2017-11-29T15:38:02.000Z","_content":"\n> Lack of money is the root of all evil.\n> **George Bernard Shaw**\n***\n> Some people like my advice so much that they frame it upon the wall instead of using it. \n> 些人实在太喜欢我的建议了，甚至裱起来挂在墙上，但就是不用。\n> **Gordon R. Dickson**\n***\n> Life is what happens to you while you're busy making other plans. \n> 当你忙着做计划，却又有事突然降临，这就是生活。\n> **John Lennon**\n***\n> There are lots of people who mistake their imagination for their memory. \n> 错把想象力当记忆力的人太多了。\n> **Josh Billings**\n***\n> I have learned to use the word 'impossible' with the greatest caution.\n> 我已经学会尽可能慎用“不可能”这个词。\n> **Wernher von Braun**\n***\n> To love what you do and feel that it matters — how could anything be more fun?\n> 热爱自己的事业，感受到它的重要，还有什么比这更有乐趣的事吗？\n> ** Katharine Graham**\n***\n> There is no love sincerer than the love of food.\n> 没有哪种爱比爱吃更真诚。\n> **萧伯纳**\n***\n> Make sure you have finished speaking before your audience has finished listening.\n> 确保在别人不想再听之前把话说完。\n> **Dorothy Sarnoff**\n***\n> Kindness is like snow—It beautifies everything it covers.\n> 善意如雪，装点一切。\n> **Kahlil Gibran**\n***\n> I love deadlines. I like the whooshing sound they make as they fly by.\n> 我就喜欢最后期限，喜欢它飞驰而过时发出的嗖嗖声。\n> **Douglas Adams**\n***\n> Travel is more than the seeing of sights; it is a change that goes on, deep and permanent, in the ideas of living.\n> 旅行不仅仅是看风景，还能给人生观念带来深远的改变。\n> **Mary Ritter Beard**\n***\n> It is not worth an intelligent man's time to be in the majority.\n> 聪明人不值得把时间花在随大流上。\n> **G. H. Hardy**\n***\n> Try the most outrageous things you can — shock yourself. You have at your power the ability to do anything.\n> 尽你所能，尝试最离谱的事，让你自己都震惊。你无所不能。\n> **Sol LeWitt**\n***\n> Only the shallow know themselves.\n> 只有浅薄的人才了解自己。\n> **Oscar Wilder**\n***\n> Imagination is more important than knowledge.\n> 想象力比知识更重要。\n> **Albert Einstein**\n***\n> It's a rare person who wants to hear what he doesn't want to hear.\n> 愿意听逆耳之言的人十分难得。\n> **Dick Cavett**\n***\n> The heights by great man reached and kept were not attained by sudden flight, but they, while their companions slept, were toiling upward in the night.\n> 伟人成就之大，并非一蹴而就，而是每夜他人酣睡时，自己苦苦耕耘。\n> **Henry Wadsworth Longfelllow**\n***\n> The secret of joy in work is contained in one word —— excellence. To know how to do something well is to enjot it.\n> 快乐的工作秘诀在于追求卓越，了解如何把事情做好本身就是享受。\n> **Pearl S.Buck** \n***\n> When love and skill work together, expect a masterpiece.\n> 热爱与能力结合，自然会出杰作。\n> **John Ruskin**\n***\n> Gratitude also opens your eyes to the limitless potential of the universe, while dissatisfaction closes your eyes to it.\n> 感恩让你开眼领略宇宙无穷的可能，不知足却会遮蔽你的双眼。\n> **Stephen Richards**\n***\n> Flowers never emit so sweet and strong a fragrance as before a storm.\n> 花朵的芬芳，在暴雨将至时最为强烈。\n> **Jean Paul Richer**\n***\n> The best way to spread Christmas cheer is singing loud for all to hear.\n> 要传播圣诞的欢乐，为大家高声歌唱是最好不过的。\n> **Will Ferrell**\n***\n> Better to do something imperfectly than to do nothing flawlessly.\n> 做些不够尽善尽美的事，总好过不犯错误的无所事事。\n> **Robert H.Schuller**\n***\n> It is better to wear out than rust out.\n> 与其生锈发霉，不如物尽其用。\n> **Bishop Richard Cumberland**\n***\n> Every time you tear a leaf off a calendar, you represent a new place for new ideas.\n> 每撕下一页日历，你就又有了地方装新想法。\n> **Charles Kettering**\n***\n> When you play, play hard; when you work, don't play at all.\n> 玩耍需尽兴，工作勿儿戏。\n> **Theodore Roosevelt**\n***\n> You can't turn back the clock. But you can eind it up again.\n> 你无法让时钟反转，但你能重新上发条。  \n> **Bonnie Prudden**\n***\n> The only people with whom you should try to get even are those who have helped you.\n> 要说你该跟谁互不相欠的话，那只该是帮助过你的人。\n> **John E. Southard**\n***\n> Say not, when I have leisure I will study; you may not have leisure.\n> 可别说你有空了就去学习，你可能根本不会有空。\n> **The Mishnah**\n***\n> Hope you never grow old.\n> 愿你青春永驻。\n> **The Cranberries, \"Never Grow Old\"**\n***\n> The only reward of virtue is virtue; the only way to have a friend is to be one.\n> 对美德的回报是美德，获得友谊的唯一途径是给人以友谊。\n> **Ralph Waldo Emerson**","source":"_posts/2017-11:-day-小橘子.md","raw":"---\ntitle: 小橘子\nmathjax: true\ndate: 2017-11-29 23:38:02\ncategories: 英语\ntags: 记录\n---\n\n> Lack of money is the root of all evil.\n> **George Bernard Shaw**\n***\n> Some people like my advice so much that they frame it upon the wall instead of using it. \n> 些人实在太喜欢我的建议了，甚至裱起来挂在墙上，但就是不用。\n> **Gordon R. Dickson**\n***\n> Life is what happens to you while you're busy making other plans. \n> 当你忙着做计划，却又有事突然降临，这就是生活。\n> **John Lennon**\n***\n> There are lots of people who mistake their imagination for their memory. \n> 错把想象力当记忆力的人太多了。\n> **Josh Billings**\n***\n> I have learned to use the word 'impossible' with the greatest caution.\n> 我已经学会尽可能慎用“不可能”这个词。\n> **Wernher von Braun**\n***\n> To love what you do and feel that it matters — how could anything be more fun?\n> 热爱自己的事业，感受到它的重要，还有什么比这更有乐趣的事吗？\n> ** Katharine Graham**\n***\n> There is no love sincerer than the love of food.\n> 没有哪种爱比爱吃更真诚。\n> **萧伯纳**\n***\n> Make sure you have finished speaking before your audience has finished listening.\n> 确保在别人不想再听之前把话说完。\n> **Dorothy Sarnoff**\n***\n> Kindness is like snow—It beautifies everything it covers.\n> 善意如雪，装点一切。\n> **Kahlil Gibran**\n***\n> I love deadlines. I like the whooshing sound they make as they fly by.\n> 我就喜欢最后期限，喜欢它飞驰而过时发出的嗖嗖声。\n> **Douglas Adams**\n***\n> Travel is more than the seeing of sights; it is a change that goes on, deep and permanent, in the ideas of living.\n> 旅行不仅仅是看风景，还能给人生观念带来深远的改变。\n> **Mary Ritter Beard**\n***\n> It is not worth an intelligent man's time to be in the majority.\n> 聪明人不值得把时间花在随大流上。\n> **G. H. Hardy**\n***\n> Try the most outrageous things you can — shock yourself. You have at your power the ability to do anything.\n> 尽你所能，尝试最离谱的事，让你自己都震惊。你无所不能。\n> **Sol LeWitt**\n***\n> Only the shallow know themselves.\n> 只有浅薄的人才了解自己。\n> **Oscar Wilder**\n***\n> Imagination is more important than knowledge.\n> 想象力比知识更重要。\n> **Albert Einstein**\n***\n> It's a rare person who wants to hear what he doesn't want to hear.\n> 愿意听逆耳之言的人十分难得。\n> **Dick Cavett**\n***\n> The heights by great man reached and kept were not attained by sudden flight, but they, while their companions slept, were toiling upward in the night.\n> 伟人成就之大，并非一蹴而就，而是每夜他人酣睡时，自己苦苦耕耘。\n> **Henry Wadsworth Longfelllow**\n***\n> The secret of joy in work is contained in one word —— excellence. To know how to do something well is to enjot it.\n> 快乐的工作秘诀在于追求卓越，了解如何把事情做好本身就是享受。\n> **Pearl S.Buck** \n***\n> When love and skill work together, expect a masterpiece.\n> 热爱与能力结合，自然会出杰作。\n> **John Ruskin**\n***\n> Gratitude also opens your eyes to the limitless potential of the universe, while dissatisfaction closes your eyes to it.\n> 感恩让你开眼领略宇宙无穷的可能，不知足却会遮蔽你的双眼。\n> **Stephen Richards**\n***\n> Flowers never emit so sweet and strong a fragrance as before a storm.\n> 花朵的芬芳，在暴雨将至时最为强烈。\n> **Jean Paul Richer**\n***\n> The best way to spread Christmas cheer is singing loud for all to hear.\n> 要传播圣诞的欢乐，为大家高声歌唱是最好不过的。\n> **Will Ferrell**\n***\n> Better to do something imperfectly than to do nothing flawlessly.\n> 做些不够尽善尽美的事，总好过不犯错误的无所事事。\n> **Robert H.Schuller**\n***\n> It is better to wear out than rust out.\n> 与其生锈发霉，不如物尽其用。\n> **Bishop Richard Cumberland**\n***\n> Every time you tear a leaf off a calendar, you represent a new place for new ideas.\n> 每撕下一页日历，你就又有了地方装新想法。\n> **Charles Kettering**\n***\n> When you play, play hard; when you work, don't play at all.\n> 玩耍需尽兴，工作勿儿戏。\n> **Theodore Roosevelt**\n***\n> You can't turn back the clock. But you can eind it up again.\n> 你无法让时钟反转，但你能重新上发条。  \n> **Bonnie Prudden**\n***\n> The only people with whom you should try to get even are those who have helped you.\n> 要说你该跟谁互不相欠的话，那只该是帮助过你的人。\n> **John E. Southard**\n***\n> Say not, when I have leisure I will study; you may not have leisure.\n> 可别说你有空了就去学习，你可能根本不会有空。\n> **The Mishnah**\n***\n> Hope you never grow old.\n> 愿你青春永驻。\n> **The Cranberries, \"Never Grow Old\"**\n***\n> The only reward of virtue is virtue; the only way to have a friend is to be one.\n> 对美德的回报是美德，获得友谊的唯一途径是给人以友谊。\n> **Ralph Waldo Emerson**","slug":"2017-11-day-小橘子","published":1,"updated":"2018-03-20T09:12:19.639Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemh000oexpxz517eiz2","content":"<blockquote>\n<p>Lack of money is the root of all evil.<br><strong>George Bernard Shaw</strong></p>\n<hr>\n<p>Some people like my advice so much that they frame it upon the wall instead of using it.<br>些人实在太喜欢我的建议了，甚至裱起来挂在墙上，但就是不用。<br><strong>Gordon R. Dickson</strong></p>\n<hr>\n<p>Life is what happens to you while you’re busy making other plans.<br>当你忙着做计划，却又有事突然降临，这就是生活。<br><strong>John Lennon</strong></p>\n<hr>\n<p>There are lots of people who mistake their imagination for their memory.<br>错把想象力当记忆力的人太多了。<br><strong>Josh Billings</strong></p>\n<hr>\n<p>I have learned to use the word ‘impossible’ with the greatest caution.<br>我已经学会尽可能慎用“不可能”这个词。<br><strong>Wernher von Braun</strong></p>\n<hr>\n<p>To love what you do and feel that it matters — how could anything be more fun?<br>热爱自己的事业，感受到它的重要，还有什么比这更有乐趣的事吗？<br><strong> Katharine Graham</strong></p>\n<hr>\n<p>There is no love sincerer than the love of food.<br>没有哪种爱比爱吃更真诚。<br><strong>萧伯纳</strong></p>\n<hr>\n<p>Make sure you have finished speaking before your audience has finished listening.<br>确保在别人不想再听之前把话说完。<br><strong>Dorothy Sarnoff</strong></p>\n<hr>\n<p>Kindness is like snow—It beautifies everything it covers.<br>善意如雪，装点一切。<br><strong>Kahlil Gibran</strong></p>\n<hr>\n<p>I love deadlines. I like the whooshing sound they make as they fly by.<br>我就喜欢最后期限，喜欢它飞驰而过时发出的嗖嗖声。<br><strong>Douglas Adams</strong></p>\n<hr>\n<p>Travel is more than the seeing of sights; it is a change that goes on, deep and permanent, in the ideas of living.<br>旅行不仅仅是看风景，还能给人生观念带来深远的改变。<br><strong>Mary Ritter Beard</strong></p>\n<hr>\n<p>It is not worth an intelligent man’s time to be in the majority.<br>聪明人不值得把时间花在随大流上。<br><strong>G. H. Hardy</strong></p>\n<hr>\n<p>Try the most outrageous things you can — shock yourself. You have at your power the ability to do anything.<br>尽你所能，尝试最离谱的事，让你自己都震惊。你无所不能。<br><strong>Sol LeWitt</strong></p>\n<hr>\n<p>Only the shallow know themselves.<br>只有浅薄的人才了解自己。<br><strong>Oscar Wilder</strong></p>\n<hr>\n<p>Imagination is more important than knowledge.<br>想象力比知识更重要。<br><strong>Albert Einstein</strong></p>\n<hr>\n<p>It’s a rare person who wants to hear what he doesn’t want to hear.<br>愿意听逆耳之言的人十分难得。<br><strong>Dick Cavett</strong></p>\n<hr>\n<p>The heights by great man reached and kept were not attained by sudden flight, but they, while their companions slept, were toiling upward in the night.<br>伟人成就之大，并非一蹴而就，而是每夜他人酣睡时，自己苦苦耕耘。<br><strong>Henry Wadsworth Longfelllow</strong></p>\n<hr>\n<p>The secret of joy in work is contained in one word —— excellence. To know how to do something well is to enjot it.<br>快乐的工作秘诀在于追求卓越，了解如何把事情做好本身就是享受。<br><strong>Pearl S.Buck</strong> </p>\n<hr>\n<p>When love and skill work together, expect a masterpiece.<br>热爱与能力结合，自然会出杰作。<br><strong>John Ruskin</strong></p>\n<hr>\n<p>Gratitude also opens your eyes to the limitless potential of the universe, while dissatisfaction closes your eyes to it.<br>感恩让你开眼领略宇宙无穷的可能，不知足却会遮蔽你的双眼。<br><strong>Stephen Richards</strong></p>\n<hr>\n<p>Flowers never emit so sweet and strong a fragrance as before a storm.<br>花朵的芬芳，在暴雨将至时最为强烈。<br><strong>Jean Paul Richer</strong></p>\n<hr>\n<p>The best way to spread Christmas cheer is singing loud for all to hear.<br>要传播圣诞的欢乐，为大家高声歌唱是最好不过的。<br><strong>Will Ferrell</strong></p>\n<hr>\n<p>Better to do something imperfectly than to do nothing flawlessly.<br>做些不够尽善尽美的事，总好过不犯错误的无所事事。<br><strong>Robert H.Schuller</strong></p>\n<hr>\n<p>It is better to wear out than rust out.<br>与其生锈发霉，不如物尽其用。<br><strong>Bishop Richard Cumberland</strong></p>\n<hr>\n<p>Every time you tear a leaf off a calendar, you represent a new place for new ideas.<br>每撕下一页日历，你就又有了地方装新想法。<br><strong>Charles Kettering</strong></p>\n<hr>\n<p>When you play, play hard; when you work, don’t play at all.<br>玩耍需尽兴，工作勿儿戏。<br><strong>Theodore Roosevelt</strong></p>\n<hr>\n<p>You can’t turn back the clock. But you can eind it up again.<br>你无法让时钟反转，但你能重新上发条。<br><strong>Bonnie Prudden</strong></p>\n<hr>\n<p>The only people with whom you should try to get even are those who have helped you.<br>要说你该跟谁互不相欠的话，那只该是帮助过你的人。<br><strong>John E. Southard</strong></p>\n<hr>\n<p>Say not, when I have leisure I will study; you may not have leisure.<br>可别说你有空了就去学习，你可能根本不会有空。<br><strong>The Mishnah</strong></p>\n<hr>\n<p>Hope you never grow old.<br>愿你青春永驻。<br><strong>The Cranberries, “Never Grow Old”</strong></p>\n<hr>\n<p>The only reward of virtue is virtue; the only way to have a friend is to be one.<br>对美德的回报是美德，获得友谊的唯一途径是给人以友谊。<br><strong>Ralph Waldo Emerson</strong></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>Lack of money is the root of all evil.<br><strong>George Bernard Shaw</strong></p>\n<hr>\n<p>Some people like my advice so much that they frame it upon the wall instead of using it.<br>些人实在太喜欢我的建议了，甚至裱起来挂在墙上，但就是不用。<br><strong>Gordon R. Dickson</strong></p>\n<hr>\n<p>Life is what happens to you while you’re busy making other plans.<br>当你忙着做计划，却又有事突然降临，这就是生活。<br><strong>John Lennon</strong></p>\n<hr>\n<p>There are lots of people who mistake their imagination for their memory.<br>错把想象力当记忆力的人太多了。<br><strong>Josh Billings</strong></p>\n<hr>\n<p>I have learned to use the word ‘impossible’ with the greatest caution.<br>我已经学会尽可能慎用“不可能”这个词。<br><strong>Wernher von Braun</strong></p>\n<hr>\n<p>To love what you do and feel that it matters — how could anything be more fun?<br>热爱自己的事业，感受到它的重要，还有什么比这更有乐趣的事吗？<br><strong> Katharine Graham</strong></p>\n<hr>\n<p>There is no love sincerer than the love of food.<br>没有哪种爱比爱吃更真诚。<br><strong>萧伯纳</strong></p>\n<hr>\n<p>Make sure you have finished speaking before your audience has finished listening.<br>确保在别人不想再听之前把话说完。<br><strong>Dorothy Sarnoff</strong></p>\n<hr>\n<p>Kindness is like snow—It beautifies everything it covers.<br>善意如雪，装点一切。<br><strong>Kahlil Gibran</strong></p>\n<hr>\n<p>I love deadlines. I like the whooshing sound they make as they fly by.<br>我就喜欢最后期限，喜欢它飞驰而过时发出的嗖嗖声。<br><strong>Douglas Adams</strong></p>\n<hr>\n<p>Travel is more than the seeing of sights; it is a change that goes on, deep and permanent, in the ideas of living.<br>旅行不仅仅是看风景，还能给人生观念带来深远的改变。<br><strong>Mary Ritter Beard</strong></p>\n<hr>\n<p>It is not worth an intelligent man’s time to be in the majority.<br>聪明人不值得把时间花在随大流上。<br><strong>G. H. Hardy</strong></p>\n<hr>\n<p>Try the most outrageous things you can — shock yourself. You have at your power the ability to do anything.<br>尽你所能，尝试最离谱的事，让你自己都震惊。你无所不能。<br><strong>Sol LeWitt</strong></p>\n<hr>\n<p>Only the shallow know themselves.<br>只有浅薄的人才了解自己。<br><strong>Oscar Wilder</strong></p>\n<hr>\n<p>Imagination is more important than knowledge.<br>想象力比知识更重要。<br><strong>Albert Einstein</strong></p>\n<hr>\n<p>It’s a rare person who wants to hear what he doesn’t want to hear.<br>愿意听逆耳之言的人十分难得。<br><strong>Dick Cavett</strong></p>\n<hr>\n<p>The heights by great man reached and kept were not attained by sudden flight, but they, while their companions slept, were toiling upward in the night.<br>伟人成就之大，并非一蹴而就，而是每夜他人酣睡时，自己苦苦耕耘。<br><strong>Henry Wadsworth Longfelllow</strong></p>\n<hr>\n<p>The secret of joy in work is contained in one word —— excellence. To know how to do something well is to enjot it.<br>快乐的工作秘诀在于追求卓越，了解如何把事情做好本身就是享受。<br><strong>Pearl S.Buck</strong> </p>\n<hr>\n<p>When love and skill work together, expect a masterpiece.<br>热爱与能力结合，自然会出杰作。<br><strong>John Ruskin</strong></p>\n<hr>\n<p>Gratitude also opens your eyes to the limitless potential of the universe, while dissatisfaction closes your eyes to it.<br>感恩让你开眼领略宇宙无穷的可能，不知足却会遮蔽你的双眼。<br><strong>Stephen Richards</strong></p>\n<hr>\n<p>Flowers never emit so sweet and strong a fragrance as before a storm.<br>花朵的芬芳，在暴雨将至时最为强烈。<br><strong>Jean Paul Richer</strong></p>\n<hr>\n<p>The best way to spread Christmas cheer is singing loud for all to hear.<br>要传播圣诞的欢乐，为大家高声歌唱是最好不过的。<br><strong>Will Ferrell</strong></p>\n<hr>\n<p>Better to do something imperfectly than to do nothing flawlessly.<br>做些不够尽善尽美的事，总好过不犯错误的无所事事。<br><strong>Robert H.Schuller</strong></p>\n<hr>\n<p>It is better to wear out than rust out.<br>与其生锈发霉，不如物尽其用。<br><strong>Bishop Richard Cumberland</strong></p>\n<hr>\n<p>Every time you tear a leaf off a calendar, you represent a new place for new ideas.<br>每撕下一页日历，你就又有了地方装新想法。<br><strong>Charles Kettering</strong></p>\n<hr>\n<p>When you play, play hard; when you work, don’t play at all.<br>玩耍需尽兴，工作勿儿戏。<br><strong>Theodore Roosevelt</strong></p>\n<hr>\n<p>You can’t turn back the clock. But you can eind it up again.<br>你无法让时钟反转，但你能重新上发条。<br><strong>Bonnie Prudden</strong></p>\n<hr>\n<p>The only people with whom you should try to get even are those who have helped you.<br>要说你该跟谁互不相欠的话，那只该是帮助过你的人。<br><strong>John E. Southard</strong></p>\n<hr>\n<p>Say not, when I have leisure I will study; you may not have leisure.<br>可别说你有空了就去学习，你可能根本不会有空。<br><strong>The Mishnah</strong></p>\n<hr>\n<p>Hope you never grow old.<br>愿你青春永驻。<br><strong>The Cranberries, “Never Grow Old”</strong></p>\n<hr>\n<p>The only reward of virtue is virtue; the only way to have a friend is to be one.<br>对美德的回报是美德，获得友谊的唯一途径是给人以友谊。<br><strong>Ralph Waldo Emerson</strong></p>\n</blockquote>\n"},{"title":"数论的小知识","mathjax":true,"date":"2018-04-20T08:03:25.000Z","_content":"- 费马小定理\n维基百科 [费马小定理](https://zh.wikipedia.org/wiki/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86)\n- 欧拉定理\n维基百科 [欧拉定理](https://zh.wikipedia.org/wiki/欧拉定理)\n欧拉定理是费马小定理的推广\n-----------------------------------\n利用欧拉定理可以方便的求摸倒数，若a，n为正整数，且a，n互素，\n则 $ a^{\\varphi(n)} \\  \\equiv \\  1 \\; (\\; mod \\; n \\; )$\n其中 $\\varphi(n)$ 为欧拉函数，欧拉函数是小于或等于n的正整数中与n互质的数的数目。\n若n为素数，$\\varphi(n) = n - 1$, 故 $a^{n-1} \\equiv 1 \\; (mod \\; n)$, 即 $a*a^{n-2} \\equiv 1 \\; (mod \\; n)$,\n所以 $a^{-1}\\%n = a^{n-2}\\%n$","source":"_posts/2018-04-20-数论的小知识.md","raw":"---\ntitle: 数论的小知识\nmathjax: true\ndate: 2018-04-20 16:03:25\ncategories:\n- 算法\n---\n- 费马小定理\n维基百科 [费马小定理](https://zh.wikipedia.org/wiki/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86)\n- 欧拉定理\n维基百科 [欧拉定理](https://zh.wikipedia.org/wiki/欧拉定理)\n欧拉定理是费马小定理的推广\n-----------------------------------\n利用欧拉定理可以方便的求摸倒数，若a，n为正整数，且a，n互素，\n则 $ a^{\\varphi(n)} \\  \\equiv \\  1 \\; (\\; mod \\; n \\; )$\n其中 $\\varphi(n)$ 为欧拉函数，欧拉函数是小于或等于n的正整数中与n互质的数的数目。\n若n为素数，$\\varphi(n) = n - 1$, 故 $a^{n-1} \\equiv 1 \\; (mod \\; n)$, 即 $a*a^{n-2} \\equiv 1 \\; (mod \\; n)$,\n所以 $a^{-1}\\%n = a^{n-2}\\%n$","slug":"数论的小知识","published":1,"updated":"2018-10-09T02:45:38.656Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemi000rexpxvn7u95z1","content":"<ul>\n<li>费马小定理<br>维基百科 <a href=\"https://zh.wikipedia.org/wiki/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86\" target=\"_blank\" rel=\"external\">费马小定理</a></li>\n<li>欧拉定理<br>维基百科 <a href=\"https://zh.wikipedia.org/wiki/欧拉定理\" target=\"_blank\" rel=\"external\">欧拉定理</a><br>欧拉定理是费马小定理的推广</li>\n</ul>\n<hr>\n<p>利用欧拉定理可以方便的求摸倒数，若a，n为正整数，且a，n互素，<br>则 $ a^{\\varphi(n)} \\  \\equiv \\  1 \\; (\\; mod \\; n \\; )$<br>其中 $\\varphi(n)$ 为欧拉函数，欧拉函数是小于或等于n的正整数中与n互质的数的数目。<br>若n为素数，$\\varphi(n) = n - 1$, 故 $a^{n-1} \\equiv 1 \\; (mod \\; n)$, 即 $a*a^{n-2} \\equiv 1 \\; (mod \\; n)$,<br>所以 $a^{-1}\\%n = a^{n-2}\\%n$</p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>费马小定理<br>维基百科 <a href=\"https://zh.wikipedia.org/wiki/%E8%B4%B9%E9%A9%AC%E5%B0%8F%E5%AE%9A%E7%90%86\" target=\"_blank\" rel=\"external\">费马小定理</a></li>\n<li>欧拉定理<br>维基百科 <a href=\"https://zh.wikipedia.org/wiki/欧拉定理\" target=\"_blank\" rel=\"external\">欧拉定理</a><br>欧拉定理是费马小定理的推广</li>\n</ul>\n<hr>\n<p>利用欧拉定理可以方便的求摸倒数，若a，n为正整数，且a，n互素，<br>则 $ a^{\\varphi(n)} \\  \\equiv \\  1 \\; (\\; mod \\; n \\; )$<br>其中 $\\varphi(n)$ 为欧拉函数，欧拉函数是小于或等于n的正整数中与n互质的数的数目。<br>若n为素数，$\\varphi(n) = n - 1$, 故 $a^{n-1} \\equiv 1 \\; (mod \\; n)$, 即 $a*a^{n-2} \\equiv 1 \\; (mod \\; n)$,<br>所以 $a^{-1}\\%n = a^{n-2}\\%n$</p>\n"},{"title":"数学证明总结","mathjax":true,"date":"2018-04-27T04:41:10.000Z","_content":"* 收敛\n    首先可以证明有界性，再证明单调性。这是一个基本的思路，单调性也可以分情况讨论。其实简单的总结来说，即使极限收敛里面的判别准则之一， **单调有限数列必有极限**","source":"_posts/2018-04-27-数学证明总结.md","raw":"---\ntitle: 数学证明总结\nmathjax: true\ndate: 2018-04-27 12:41:10\n---\n* 收敛\n    首先可以证明有界性，再证明单调性。这是一个基本的思路，单调性也可以分情况讨论。其实简单的总结来说，即使极限收敛里面的判别准则之一， **单调有限数列必有极限**","slug":"数学证明总结","published":1,"updated":"2018-04-27T04:44:32.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemj000texpx8g5nnd0u","content":"<ul>\n<li>收敛<br>  首先可以证明有界性，再证明单调性。这是一个基本的思路，单调性也可以分情况讨论。其实简单的总结来说，即使极限收敛里面的判别准则之一， <strong>单调有限数列必有极限</strong></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>收敛<br>  首先可以证明有界性，再证明单调性。这是一个基本的思路，单调性也可以分情况讨论。其实简单的总结来说，即使极限收敛里面的判别准则之一， <strong>单调有限数列必有极限</strong></li>\n</ul>\n"},{"title":"高斯滤波","mathjax":true,"date":"2018-04-27T02:43:35.000Z","_content":"高斯滤波\n* 数学原理\n    * 公式\n        一维公式 $G(x) =  \\frac{1}{\\sqrt{2\\pi\\sigma^{2}}}e^{-\\frac{x^2}{2\\sigma^2}}$\n        二维公式 $G(x, y) = \\frac{1}{2\\pi\\sigma^2}e^{-\\frac{x^2+y^2}{2\\sigma^2}}$\n*\n","source":"_posts/2018-04-27-高斯滤波.md","raw":"---\ntitle: 高斯滤波\nmathjax: true\ndate: 2018-04-27 10:43:35\n---\n高斯滤波\n* 数学原理\n    * 公式\n        一维公式 $G(x) =  \\frac{1}{\\sqrt{2\\pi\\sigma^{2}}}e^{-\\frac{x^2}{2\\sigma^2}}$\n        二维公式 $G(x, y) = \\frac{1}{2\\pi\\sigma^2}e^{-\\frac{x^2+y^2}{2\\sigma^2}}$\n*\n","slug":"高斯滤波","published":1,"updated":"2018-04-27T04:45:19.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oeml000wexpxzy5ori9n","content":"<p>高斯滤波</p>\n<ul>\n<li>数学原理<ul>\n<li>公式<br>  一维公式 $G(x) =  \\frac{1}{\\sqrt{2\\pi\\sigma^{2}}}e^{-\\frac{x^2}{2\\sigma^2}}$<br>  二维公式 $G(x, y) = \\frac{1}{2\\pi\\sigma^2}e^{-\\frac{x^2+y^2}{2\\sigma^2}}$<br>*</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>高斯滤波</p>\n<ul>\n<li>数学原理<ul>\n<li>公式<br>  一维公式 $G(x) =  \\frac{1}{\\sqrt{2\\pi\\sigma^{2}}}e^{-\\frac{x^2}{2\\sigma^2}}$<br>  二维公式 $G(x, y) = \\frac{1}{2\\pi\\sigma^2}e^{-\\frac{x^2+y^2}{2\\sigma^2}}$<br>*</li>\n</ul>\n</li>\n</ul>\n"},{"title":"fenwick树","mathjax":true,"date":"2018-09-25T07:32:44.000Z","_content":"关键可以在$O(\\log n)$时间内求得数组任意前缀和，同时支持动态单点值的修改\n这个数可以用一个一维数组表示（1～n）， 第i项表示前i项的和。\n{% codeblock lang:python %}\nfenwick = [0]*(max_len+1)\ndef lowbit(x):\n    return x&(-x)\ndef add(pos, value):\n    while pos <= max_len:\n        fenwick[pos] += value\n        pos += lowbit(pos)\ndef sum(pos):\n    res = 0\n    while pos != 0:\n        res += fenwick[pos]\n        pos -= lowbit(pos)\n    return res\n{% endcodeblock %}\n\n典型应用：求逆序对数量","source":"_posts/2018-09-25-fenwick树.md","raw":"---\ntitle: fenwick树\nmathjax: true\ndate: 2018-09-25 15:32:44\n---\n关键可以在$O(\\log n)$时间内求得数组任意前缀和，同时支持动态单点值的修改\n这个数可以用一个一维数组表示（1～n）， 第i项表示前i项的和。\n{% codeblock lang:python %}\nfenwick = [0]*(max_len+1)\ndef lowbit(x):\n    return x&(-x)\ndef add(pos, value):\n    while pos <= max_len:\n        fenwick[pos] += value\n        pos += lowbit(pos)\ndef sum(pos):\n    res = 0\n    while pos != 0:\n        res += fenwick[pos]\n        pos -= lowbit(pos)\n    return res\n{% endcodeblock %}\n\n典型应用：求逆序对数量","slug":"fenwick树","published":1,"updated":"2018-10-09T09:29:15.932Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemm000yexpxy0u1gx8p","content":"<p>关键可以在$O(\\log n)$时间内求得数组任意前缀和，同时支持动态单点值的修改<br>这个数可以用一个一维数组表示（1～n）， 第i项表示前i项的和。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">fenwick = [<span class=\"number\">0</span>]*(max_len+<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lowbit</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> x&amp;(-x)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(pos, value)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> pos &lt;= max_len:</div><div class=\"line\">        fenwick[pos] += value</div><div class=\"line\">        pos += lowbit(pos)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum</span><span class=\"params\">(pos)</span>:</span></div><div class=\"line\">    res = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> pos != <span class=\"number\">0</span>:</div><div class=\"line\">        res += fenwick[pos]</div><div class=\"line\">        pos -= lowbit(pos)</div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n<p>典型应用：求逆序对数量</p>\n","site":{"data":{}},"excerpt":"","more":"<p>关键可以在$O(\\log n)$时间内求得数组任意前缀和，同时支持动态单点值的修改<br>这个数可以用一个一维数组表示（1～n）， 第i项表示前i项的和。<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">fenwick = [<span class=\"number\">0</span>]*(max_len+<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">lowbit</span><span class=\"params\">(x)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">return</span> x&amp;(-x)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">add</span><span class=\"params\">(pos, value)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">while</span> pos &lt;= max_len:</div><div class=\"line\">        fenwick[pos] += value</div><div class=\"line\">        pos += lowbit(pos)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">sum</span><span class=\"params\">(pos)</span>:</span></div><div class=\"line\">    res = <span class=\"number\">0</span></div><div class=\"line\">    <span class=\"keyword\">while</span> pos != <span class=\"number\">0</span>:</div><div class=\"line\">        res += fenwick[pos]</div><div class=\"line\">        pos -= lowbit(pos)</div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n<p>典型应用：求逆序对数量</p>\n"},{"title":"快速幂","mathjax":true,"date":"2018-10-09T09:14:48.000Z","_content":"利用二进制和位运算的方式快速求幂\n{% codeblock lang:python %}\ndef pow(a, b):\n    res, base = 1, b\n    while b != 0:\n        if b&1 == 1: res *= base\n        base *= base\n        b >>= 1\n    return res\n{% endcodeblock %}","source":"_posts/2018-10-09-快速幂.md","raw":"---\ntitle: 快速幂\nmathjax: true\ndate: 2018-10-09 17:14:48\n---\n利用二进制和位运算的方式快速求幂\n{% codeblock lang:python %}\ndef pow(a, b):\n    res, base = 1, b\n    while b != 0:\n        if b&1 == 1: res *= base\n        base *= base\n        b >>= 1\n    return res\n{% endcodeblock %}","slug":"快速幂","published":1,"updated":"2018-10-09T09:20:59.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemo0011expx55lni31h","content":"<p>利用二进制和位运算的方式快速求幂<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pow</span><span class=\"params\">(a, b)</span>:</span></div><div class=\"line\">    res, base = <span class=\"number\">1</span>, b</div><div class=\"line\">    <span class=\"keyword\">while</span> b != <span class=\"number\">0</span>:</div><div class=\"line\">        <span class=\"keyword\">if</span> b&amp;<span class=\"number\">1</span> == <span class=\"number\">1</span>: res *= base</div><div class=\"line\">        base *= base</div><div class=\"line\">        b &gt;&gt;= <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>利用二进制和位运算的方式快速求幂<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">pow</span><span class=\"params\">(a, b)</span>:</span></div><div class=\"line\">    res, base = <span class=\"number\">1</span>, b</div><div class=\"line\">    <span class=\"keyword\">while</span> b != <span class=\"number\">0</span>:</div><div class=\"line\">        <span class=\"keyword\">if</span> b&amp;<span class=\"number\">1</span> == <span class=\"number\">1</span>: res *= base</div><div class=\"line\">        base *= base</div><div class=\"line\">        b &gt;&gt;= <span class=\"number\">1</span></div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n"},{"title":"linux常用工具命令记录","mathjax":true,"date":"2018-10-10T08:30:33.000Z","_content":"curl 下载文件\n{% codeblock lang:shell %}\ncurl url -o file_name --progress\n{% endcodeblock%}\nscp 复制可以从主机到从机，反过来也可以。仅仅调用地址即可\n","source":"_posts/2018-10-10-linux常用工具命令记录.md","raw":"---\ntitle: linux常用工具命令记录\nmathjax: true\ndate: 2018-10-10 16:30:33\n---\ncurl 下载文件\n{% codeblock lang:shell %}\ncurl url -o file_name --progress\n{% endcodeblock%}\nscp 复制可以从主机到从机，反过来也可以。仅仅调用地址即可\n","slug":"linux常用工具命令记录","published":1,"updated":"2018-10-21T01:54:47.280Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemp0015expxerbuiywm","content":"<p>curl 下载文件<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl url -o file_name --progress</div></pre></td></tr></table></figure><br>scp 复制可以从主机到从机，反过来也可以。仅仅调用地址即可</p>\n","site":{"data":{}},"excerpt":"","more":"<p>curl 下载文件<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">curl url -o file_name --progress</div></pre></td></tr></table></figure><br>scp 复制可以从主机到从机，反过来也可以。仅仅调用地址即可</p>\n"},{"title":"github小工具集合","mathjax":true,"date":"2018-10-12T03:11:20.000Z","_content":"图片[小标识](https://shields.io/#/)\n对项目的依赖包进行过期检测[依赖检测](https://requires.io/)","source":"_posts/2018-10-12-github小工具集合.md","raw":"---\ntitle: github小工具集合\nmathjax: true\ndate: 2018-10-12 11:11:20\ntags: 工具\n---\n图片[小标识](https://shields.io/#/)\n对项目的依赖包进行过期检测[依赖检测](https://requires.io/)","slug":"github小工具集合","published":1,"updated":"2018-10-14T12:55:03.016Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemq0017expx5hgyihrh","content":"<p>图片<a href=\"https://shields.io/#/\" target=\"_blank\" rel=\"external\">小标识</a><br>对项目的依赖包进行过期检测<a href=\"https://requires.io/\" target=\"_blank\" rel=\"external\">依赖检测</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>图片<a href=\"https://shields.io/#/\" target=\"_blank\" rel=\"external\">小标识</a><br>对项目的依赖包进行过期检测<a href=\"https://requires.io/\" target=\"_blank\" rel=\"external\">依赖检测</a></p>\n"},{"title":"docker总结","mathjax":true,"date":"2018-10-14T09:06:22.000Z","_content":"docker-machine 相关的常用命令:start,stop,ls\nswarm 有主机和从机之分,主机上运行 可以通过docker-machine ssh \\[主机名\\] \"docker swarm init --advertise-addr \\[主机ip\\]\" 从机的命令会有提示\ndocker run 例子 docker run --name some-name --rm -d -v source_abs_path:container_path --link container_name:another_name(代表ip地址) -p 8080:8080 image\ndockerfile文件运行过程可以引用官网的一幅图说明:\n![dockerfile](https://docs.docker.com/storage/storagedriver/images/container-layers.jpg)\n官网有详细的文档说明，参考[dockerfile运行过程](https://docs.docker.com/storage/storagedriver/#images-and-layers)","source":"_posts/2018-10-14-docker总结.md","raw":"---\ntitle: docker总结\nmathjax: true\ndate: 2018-10-14 17:06:22\ntags: docker\n---\ndocker-machine 相关的常用命令:start,stop,ls\nswarm 有主机和从机之分,主机上运行 可以通过docker-machine ssh \\[主机名\\] \"docker swarm init --advertise-addr \\[主机ip\\]\" 从机的命令会有提示\ndocker run 例子 docker run --name some-name --rm -d -v source_abs_path:container_path --link container_name:another_name(代表ip地址) -p 8080:8080 image\ndockerfile文件运行过程可以引用官网的一幅图说明:\n![dockerfile](https://docs.docker.com/storage/storagedriver/images/container-layers.jpg)\n官网有详细的文档说明，参考[dockerfile运行过程](https://docs.docker.com/storage/storagedriver/#images-and-layers)","slug":"docker总结","published":1,"updated":"2018-10-15T03:18:39.304Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemr001bexpxrf6r7gml","content":"<p>docker-machine 相关的常用命令:start,stop,ls<br>swarm 有主机和从机之分,主机上运行 可以通过docker-machine ssh [主机名] “docker swarm init –advertise-addr [主机ip]“ 从机的命令会有提示<br>docker run 例子 docker run –name some-name –rm -d -v source_abs_path:container_path –link container_name:another_name(代表ip地址) -p 8080:8080 image<br>dockerfile文件运行过程可以引用官网的一幅图说明:<br><img src=\"https://docs.docker.com/storage/storagedriver/images/container-layers.jpg\" alt=\"dockerfile\"><br>官网有详细的文档说明，参考<a href=\"https://docs.docker.com/storage/storagedriver/#images-and-layers\" target=\"_blank\" rel=\"external\">dockerfile运行过程</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>docker-machine 相关的常用命令:start,stop,ls<br>swarm 有主机和从机之分,主机上运行 可以通过docker-machine ssh [主机名] “docker swarm init –advertise-addr [主机ip]“ 从机的命令会有提示<br>docker run 例子 docker run –name some-name –rm -d -v source_abs_path:container_path –link container_name:another_name(代表ip地址) -p 8080:8080 image<br>dockerfile文件运行过程可以引用官网的一幅图说明:<br><img src=\"https://docs.docker.com/storage/storagedriver/images/container-layers.jpg\" alt=\"dockerfile\"><br>官网有详细的文档说明，参考<a href=\"https://docs.docker.com/storage/storagedriver/#images-and-layers\" target=\"_blank\" rel=\"external\">dockerfile运行过程</a></p>\n"},{"title":"scrapy记录","mathjax":true,"date":"2018-10-15T06:17:50.000Z","_content":"request 和 response 在交互数据时可以通过，设置meta参数，注意不要和特定参数重复\n其实文档特别详细，随手翻文档就行了","source":"_posts/2018-10-15-scrapy记录.md","raw":"---\ntitle: scrapy记录\nmathjax: true\ndate: 2018-10-15 14:17:50\n---\nrequest 和 response 在交互数据时可以通过，设置meta参数，注意不要和特定参数重复\n其实文档特别详细，随手翻文档就行了","slug":"scrapy记录","published":1,"updated":"2018-10-16T07:19:57.087Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oems001dexpxea8oqnzg","content":"<p>request 和 response 在交互数据时可以通过，设置meta参数，注意不要和特定参数重复<br>其实文档特别详细，随手翻文档就行了</p>\n","site":{"data":{}},"excerpt":"","more":"<p>request 和 response 在交互数据时可以通过，设置meta参数，注意不要和特定参数重复<br>其实文档特别详细，随手翻文档就行了</p>\n"},{"title":"图像导数","mathjax":true,"date":"2018-05-28T15:25:08.000Z","_content":"图像的导数在图像处理中占有重要作用，它在图像分割领域是一种很好用的处理手段。接下来详细介绍一下它的原理及实现，首先我们先从问题入手。\n边缘模型\n首先我们会把彩色图转换为灰度图像，在此基础上讨论边缘模型。它可以大致分为三类：\n- 台阶型 我们从数字角度来表示这种边缘，例如{0,,,0,255,,,255},它对应于一阶导数的极值点和二阶导数的零点\n- 斜坡形 例如 {0,...,128,...,255}，\n- 屋顶型 例如 {0,255,255,255,0}\n--------------------\n- 一阶微分算子\n    - 梯度算子\n        它的表达式为 $G[f(x,y)]=\\left[\\begin{array}{c}\\ \\frac{\\partial f}{\\partial x} \\\\\\\\ \\frac{\\partial f}{\\partial y} \\end{array}\\right]$\n        该向量有一个重要的几何性质，它指出了 f 在位置(x,y)处的最大变化率的方向。\n        对应到离散形式，它的表达式为$g_x = \\frac{\\partial f(x,y)}{\\partial x} = f(x+1, y) - f(x,y)$和$g_y = \\frac{\\partial f(x,y)}{\\partial y} = f(x, y+1) - f(x,y)$\n    - robert 算子\n        它是优先使用对角线优势的模板，它的模板为$\\left[\\begin{array}{cc} -1&0 \\\\\\ 0&1 \\end{array}\\right]$$\\left[\\begin{array}{cc} 0&-1 \\\\\\ 1&0 \\end{array}\\right]$\n    - prewitt 算子\n        robert算子在计算关于中心点对称的边缘模板计算时不是很有用。prewitt算子的模板为$\\left[\\begin{array}{ccc} -1&-1&-1 \\\\\\ 0&0&0 \\\\\\ 1&1&1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&0&1 \\\\\\ -1&0&1 \\\\\\ -1&0&1\\end{array}\\right]$ \n    - sobel 算子\n        它在prewitt算子的基础上部分权重变成了2，可以对噪声有一定的抑制作用，它的模板为$\\left[\\begin{array}{ccc} -1&-2&-1 \\\\\\ 0&0&0 \\\\\\ 1&2&1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&0&1 \\\\\\ -2&0&2 \\\\\\ -1&0&1\\end{array}\\right]$\n    - scharr 算子\n        它比sobel算子计算更有效，opencv提供了这种实现，模板为$\\left[\\begin{array}{ccc} -3&-10&-3 \\\\\\ 0&0&0 \\\\\\ 3&10&3\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -3&0&3 \\\\\\ -10&0&10 \\\\\\ -3&0&3\\end{array}\\right]$\n- 二阶微分算子\n    - laplacian 算子","source":"_posts/2018-05-28-图像导数.md","raw":"---\ntitle: 图像导数\nmathjax: true\ndate: 2018-05-28 23:25:08\n---\n图像的导数在图像处理中占有重要作用，它在图像分割领域是一种很好用的处理手段。接下来详细介绍一下它的原理及实现，首先我们先从问题入手。\n边缘模型\n首先我们会把彩色图转换为灰度图像，在此基础上讨论边缘模型。它可以大致分为三类：\n- 台阶型 我们从数字角度来表示这种边缘，例如{0,,,0,255,,,255},它对应于一阶导数的极值点和二阶导数的零点\n- 斜坡形 例如 {0,...,128,...,255}，\n- 屋顶型 例如 {0,255,255,255,0}\n--------------------\n- 一阶微分算子\n    - 梯度算子\n        它的表达式为 $G[f(x,y)]=\\left[\\begin{array}{c}\\ \\frac{\\partial f}{\\partial x} \\\\\\\\ \\frac{\\partial f}{\\partial y} \\end{array}\\right]$\n        该向量有一个重要的几何性质，它指出了 f 在位置(x,y)处的最大变化率的方向。\n        对应到离散形式，它的表达式为$g_x = \\frac{\\partial f(x,y)}{\\partial x} = f(x+1, y) - f(x,y)$和$g_y = \\frac{\\partial f(x,y)}{\\partial y} = f(x, y+1) - f(x,y)$\n    - robert 算子\n        它是优先使用对角线优势的模板，它的模板为$\\left[\\begin{array}{cc} -1&0 \\\\\\ 0&1 \\end{array}\\right]$$\\left[\\begin{array}{cc} 0&-1 \\\\\\ 1&0 \\end{array}\\right]$\n    - prewitt 算子\n        robert算子在计算关于中心点对称的边缘模板计算时不是很有用。prewitt算子的模板为$\\left[\\begin{array}{ccc} -1&-1&-1 \\\\\\ 0&0&0 \\\\\\ 1&1&1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&0&1 \\\\\\ -1&0&1 \\\\\\ -1&0&1\\end{array}\\right]$ \n    - sobel 算子\n        它在prewitt算子的基础上部分权重变成了2，可以对噪声有一定的抑制作用，它的模板为$\\left[\\begin{array}{ccc} -1&-2&-1 \\\\\\ 0&0&0 \\\\\\ 1&2&1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&0&1 \\\\\\ -2&0&2 \\\\\\ -1&0&1\\end{array}\\right]$\n    - scharr 算子\n        它比sobel算子计算更有效，opencv提供了这种实现，模板为$\\left[\\begin{array}{ccc} -3&-10&-3 \\\\\\ 0&0&0 \\\\\\ 3&10&3\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -3&0&3 \\\\\\ -10&0&10 \\\\\\ -3&0&3\\end{array}\\right]$\n- 二阶微分算子\n    - laplacian 算子","slug":"图像导数","published":1,"updated":"2018-05-29T03:18:52.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemt001fexpxhwhwauik","content":"<p>图像的导数在图像处理中占有重要作用，它在图像分割领域是一种很好用的处理手段。接下来详细介绍一下它的原理及实现，首先我们先从问题入手。<br>边缘模型<br>首先我们会把彩色图转换为灰度图像，在此基础上讨论边缘模型。它可以大致分为三类：</p>\n<ul>\n<li>台阶型 我们从数字角度来表示这种边缘，例如{0,,,0,255,,,255},它对应于一阶导数的极值点和二阶导数的零点</li>\n<li>斜坡形 例如 {0,…,128,…,255}，</li>\n<li>屋顶型 例如 {0,255,255,255,0}</li>\n</ul>\n<hr>\n<ul>\n<li>一阶微分算子<ul>\n<li>梯度算子<br>  它的表达式为 $G[f(x,y)]=\\left[\\begin{array}{c}\\ \\frac{\\partial f}{\\partial x} \\\\ \\frac{\\partial f}{\\partial y} \\end{array}\\right]$<br>  该向量有一个重要的几何性质，它指出了 f 在位置(x,y)处的最大变化率的方向。<br>  对应到离散形式，它的表达式为$g_x = \\frac{\\partial f(x,y)}{\\partial x} = f(x+1, y) - f(x,y)$和$g_y = \\frac{\\partial f(x,y)}{\\partial y} = f(x, y+1) - f(x,y)$</li>\n<li>robert 算子<br>  它是优先使用对角线优势的模板，它的模板为$\\left[\\begin{array}{cc} -1&amp;0 \\\\ 0&amp;1 \\end{array}\\right]$$\\left[\\begin{array}{cc} 0&amp;-1 \\\\ 1&amp;0 \\end{array}\\right]$</li>\n<li>prewitt 算子<br>  robert算子在计算关于中心点对称的边缘模板计算时不是很有用。prewitt算子的模板为$\\left[\\begin{array}{ccc} -1&amp;-1&amp;-1 \\\\ 0&amp;0&amp;0 \\\\ 1&amp;1&amp;1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&amp;0&amp;1 \\\\ -1&amp;0&amp;1 \\\\ -1&amp;0&amp;1\\end{array}\\right]$ </li>\n<li>sobel 算子<br>  它在prewitt算子的基础上部分权重变成了2，可以对噪声有一定的抑制作用，它的模板为$\\left[\\begin{array}{ccc} -1&amp;-2&amp;-1 \\\\ 0&amp;0&amp;0 \\\\ 1&amp;2&amp;1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&amp;0&amp;1 \\\\ -2&amp;0&amp;2 \\\\ -1&amp;0&amp;1\\end{array}\\right]$</li>\n<li>scharr 算子<br>  它比sobel算子计算更有效，opencv提供了这种实现，模板为$\\left[\\begin{array}{ccc} -3&amp;-10&amp;-3 \\\\ 0&amp;0&amp;0 \\\\ 3&amp;10&amp;3\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -3&amp;0&amp;3 \\\\ -10&amp;0&amp;10 \\\\ -3&amp;0&amp;3\\end{array}\\right]$</li>\n</ul>\n</li>\n<li>二阶微分算子<ul>\n<li>laplacian 算子</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p>图像的导数在图像处理中占有重要作用，它在图像分割领域是一种很好用的处理手段。接下来详细介绍一下它的原理及实现，首先我们先从问题入手。<br>边缘模型<br>首先我们会把彩色图转换为灰度图像，在此基础上讨论边缘模型。它可以大致分为三类：</p>\n<ul>\n<li>台阶型 我们从数字角度来表示这种边缘，例如{0,,,0,255,,,255},它对应于一阶导数的极值点和二阶导数的零点</li>\n<li>斜坡形 例如 {0,…,128,…,255}，</li>\n<li>屋顶型 例如 {0,255,255,255,0}</li>\n</ul>\n<hr>\n<ul>\n<li>一阶微分算子<ul>\n<li>梯度算子<br>  它的表达式为 $G[f(x,y)]=\\left[\\begin{array}{c}\\ \\frac{\\partial f}{\\partial x} \\\\ \\frac{\\partial f}{\\partial y} \\end{array}\\right]$<br>  该向量有一个重要的几何性质，它指出了 f 在位置(x,y)处的最大变化率的方向。<br>  对应到离散形式，它的表达式为$g_x = \\frac{\\partial f(x,y)}{\\partial x} = f(x+1, y) - f(x,y)$和$g_y = \\frac{\\partial f(x,y)}{\\partial y} = f(x, y+1) - f(x,y)$</li>\n<li>robert 算子<br>  它是优先使用对角线优势的模板，它的模板为$\\left[\\begin{array}{cc} -1&amp;0 \\\\ 0&amp;1 \\end{array}\\right]$$\\left[\\begin{array}{cc} 0&amp;-1 \\\\ 1&amp;0 \\end{array}\\right]$</li>\n<li>prewitt 算子<br>  robert算子在计算关于中心点对称的边缘模板计算时不是很有用。prewitt算子的模板为$\\left[\\begin{array}{ccc} -1&amp;-1&amp;-1 \\\\ 0&amp;0&amp;0 \\\\ 1&amp;1&amp;1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&amp;0&amp;1 \\\\ -1&amp;0&amp;1 \\\\ -1&amp;0&amp;1\\end{array}\\right]$ </li>\n<li>sobel 算子<br>  它在prewitt算子的基础上部分权重变成了2，可以对噪声有一定的抑制作用，它的模板为$\\left[\\begin{array}{ccc} -1&amp;-2&amp;-1 \\\\ 0&amp;0&amp;0 \\\\ 1&amp;2&amp;1\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -1&amp;0&amp;1 \\\\ -2&amp;0&amp;2 \\\\ -1&amp;0&amp;1\\end{array}\\right]$</li>\n<li>scharr 算子<br>  它比sobel算子计算更有效，opencv提供了这种实现，模板为$\\left[\\begin{array}{ccc} -3&amp;-10&amp;-3 \\\\ 0&amp;0&amp;0 \\\\ 3&amp;10&amp;3\\end{array}\\right]$ 和 $\\left[\\begin{array}{ccc} -3&amp;0&amp;3 \\\\ -10&amp;0&amp;10 \\\\ -3&amp;0&amp;3\\end{array}\\right]$</li>\n</ul>\n</li>\n<li>二阶微分算子<ul>\n<li>laplacian 算子</li>\n</ul>\n</li>\n</ul>\n"},{"title":"vim小技巧","mathjax":true,"date":"2018-10-15T02:45:02.000Z","_content":"记录功能: q{寄存器}{一系列命令}q 重复: @{寄存器}","source":"_posts/2018-10-15-vim小技巧.md","raw":"---\ntitle: vim小技巧\nmathjax: true\ndate: 2018-10-15 10:45:02\n---\n记录功能: q{寄存器}{一系列命令}q 重复: @{寄存器}","slug":"vim小技巧","published":1,"updated":"2018-10-15T02:47:03.171Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemu001hexpxezzl0zzw","content":"<p>记录功能: q{寄存器}{一系列命令}q 重复: @{寄存器}</p>\n","site":{"data":{}},"excerpt":"","more":"<p>记录功能: q{寄存器}{一系列命令}q 重复: @{寄存器}</p>\n"},{"title":"排序","mathjax":true,"date":"2018-10-16T07:18:55.000Z","_content":"-_- 会常见的大部分排序，这种会的都总结一下，有些虽然简单但还是手写记录一下\n{% codeblock  插入排序 lang:python %}\ndef insert_sort(arr):\n    res = [arr[0]]\n    for v in arr[1:]:\n        f = False\n        for p, rv in enumerate(res):\n            if v < rv:\n                res.insert(p, v)\n                f = True\n                break\n        if not f: res.append(v)\n    return res\n{% endcodeblock%}","source":"_posts/2018-10-16-排序.md","raw":"---\ntitle: 排序\nmathjax: true\ndate: 2018-10-16 15:18:55\n---\n-_- 会常见的大部分排序，这种会的都总结一下，有些虽然简单但还是手写记录一下\n{% codeblock  插入排序 lang:python %}\ndef insert_sort(arr):\n    res = [arr[0]]\n    for v in arr[1:]:\n        f = False\n        for p, rv in enumerate(res):\n            if v < rv:\n                res.insert(p, v)\n                f = True\n                break\n        if not f: res.append(v)\n    return res\n{% endcodeblock%}","slug":"排序","published":1,"updated":"2018-10-16T08:08:09.223Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemv001jexpx6fc7783k","content":"<p>-_- 会常见的大部分排序，这种会的都总结一下，有些虽然简单但还是手写记录一下<br><figure class=\"highlight python\"><figcaption><span>插入排序</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_sort</span><span class=\"params\">(arr)</span>:</span></div><div class=\"line\">    res = [arr[<span class=\"number\">0</span>]]</div><div class=\"line\">    <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> arr[<span class=\"number\">1</span>:]:</div><div class=\"line\">        f = <span class=\"keyword\">False</span></div><div class=\"line\">        <span class=\"keyword\">for</span> p, rv <span class=\"keyword\">in</span> enumerate(res):</div><div class=\"line\">            <span class=\"keyword\">if</span> v &lt; rv:</div><div class=\"line\">                res.insert(p, v)</div><div class=\"line\">                f = <span class=\"keyword\">True</span></div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> f: res.append(v)</div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>-_- 会常见的大部分排序，这种会的都总结一下，有些虽然简单但还是手写记录一下<br><figure class=\"highlight python\"><figcaption><span>插入排序</span></figcaption><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">insert_sort</span><span class=\"params\">(arr)</span>:</span></div><div class=\"line\">    res = [arr[<span class=\"number\">0</span>]]</div><div class=\"line\">    <span class=\"keyword\">for</span> v <span class=\"keyword\">in</span> arr[<span class=\"number\">1</span>:]:</div><div class=\"line\">        f = <span class=\"keyword\">False</span></div><div class=\"line\">        <span class=\"keyword\">for</span> p, rv <span class=\"keyword\">in</span> enumerate(res):</div><div class=\"line\">            <span class=\"keyword\">if</span> v &lt; rv:</div><div class=\"line\">                res.insert(p, v)</div><div class=\"line\">                f = <span class=\"keyword\">True</span></div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> f: res.append(v)</div><div class=\"line\">    <span class=\"keyword\">return</span> res</div></pre></td></tr></table></figure></p>\n"},{"title":"c++记录","mathjax":true,"date":"2018-10-21T10:13:33.000Z","_content":"[运算符优先级](https://zh.cppreference.com/w/cpp/language/operator_precedence)\n今天做题时写if判断时 表达式为 (a&b == c)，一直逻辑不对，查阅才发现==的优先级大于位运算符，看来不确定的都得加上括号-_-\n","source":"_posts/2018-10-21-c-记录.md","raw":"---\ntitle: c++记录\nmathjax: true\ndate: 2018-10-21 18:13:33\ntags: 语言\n---\n[运算符优先级](https://zh.cppreference.com/w/cpp/language/operator_precedence)\n今天做题时写if判断时 表达式为 (a&b == c)，一直逻辑不对，查阅才发现==的优先级大于位运算符，看来不确定的都得加上括号-_-\n","slug":"c-记录","published":1,"updated":"2018-10-21T10:18:31.890Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemw001lexpx9xu9u4v8","content":"<p><a href=\"https://zh.cppreference.com/w/cpp/language/operator_precedence\" target=\"_blank\" rel=\"external\">运算符优先级</a><br>今天做题时写if判断时 表达式为 (a&amp;b == c)，一直逻辑不对，查阅才发现==的优先级大于位运算符，看来不确定的都得加上括号-_-</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://zh.cppreference.com/w/cpp/language/operator_precedence\" target=\"_blank\" rel=\"external\">运算符优先级</a><br>今天做题时写if判断时 表达式为 (a&amp;b == c)，一直逻辑不对，查阅才发现==的优先级大于位运算符，看来不确定的都得加上括号-_-</p>\n"},{"title":"codeforces记录","mathjax":true,"date":"2018-10-21T11:16:09.000Z","_content":"cf517(div2)排名破天荒的到了六分之一，加了132分，摆脱了小学生的称号。。。不敢想象，继续努力，今后刷更高质量的题，不能刷水题找快感了-_-\n","source":"_posts/2018-10-21-codeforces记录.md","raw":"---\ntitle: codeforces记录\nmathjax: true\ndate: 2018-10-21 19:16:09\ntags: 心情记录\n---\ncf517(div2)排名破天荒的到了六分之一，加了132分，摆脱了小学生的称号。。。不敢想象，继续努力，今后刷更高质量的题，不能刷水题找快感了-_-\n","slug":"codeforces记录","published":1,"updated":"2018-10-21T11:49:16.287Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemx001mexpxet5wt3mu","content":"<p>cf517(div2)排名破天荒的到了六分之一，加了132分，摆脱了小学生的称号。。。不敢想象，继续努力，今后刷更高质量的题，不能刷水题找快感了-_-</p>\n","site":{"data":{}},"excerpt":"","more":"<p>cf517(div2)排名破天荒的到了六分之一，加了132分，摆脱了小学生的称号。。。不敢想象，继续努力，今后刷更高质量的题，不能刷水题找快感了-_-</p>\n"},{"title":"0-1bfs","mathjax":true,"date":"2018-10-19T03:11:08.000Z","_content":"有用的链接 [0-1bfs](https://www.geeksforgeeks.org/0-1-bfs-shortest-path-binary-graph/)\n求某一个点到其它点的最短距离，类似于dijkstra算法，不过这个图或者树它的每条边的权重都为0或1，所以有更快的\n方法可以解决最短路径问题，可以使用队列去解决这个问题，如果边的权重为0，我们把点放在队首，否则放在队尾。\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define SIZE 9\n\nstruct Node{\n    int to, weight;\n};\nvector<Node> edges[SIZE];\n\nvoid zeroOneBFS(int start){\n    int dist[SIZE];\n    for(int i = 0; i < SIZE; i++) dist[i] = INT_MAX;\n    deque<int> Q;\n    dist[start] = 0;\n    Q.push_back(start);\n    while(!Q.empty()){\n        int v = Q.front();\n        Q.pop_front();\n        for(int i = 0; i < edges[v].size(); i++){\n            if(dist[edges[v][i].to] > dist[v] + edges[v][i].weight){\n                dist[edges[v][i].to] = dist[v]+ edges[v][i].weight;\n                if(edges[v][i].weight == 0) Q.push_front(edges[v][i].to);\n                else Q.push_back(edges[v][i].to);\n            }\n        }\n    }\n    for(int i = 0; i < SIZE; i++) cout<<dist[i]<<\" \";\n}\n\nvoid addEdge(int u, int v, int wt){\n    edges[u].push_back({v, wt});\n    edges[v].push_back({u, wt});\n}\n\nint main(){\n\taddEdge(0, 1, 0); \n\taddEdge(0, 7, 1); \n\taddEdge(1, 7, 1); \n\taddEdge(1, 2, 1); \n\taddEdge(2, 3, 0); \n\taddEdge(2, 5, 0); \n\taddEdge(2, 8, 1); \n\taddEdge(3, 4, 1); \n\taddEdge(3, 5, 1); \n\taddEdge(4, 5, 1); \n\taddEdge(5, 6, 1); \n\taddEdge(6, 7, 1); \n\taddEdge(7, 8, 1);\n    zeroOneBFS(0);\n    return 0;\n}\n```\n","source":"_posts/2018-10-19-0-1bfs.md","raw":"---\ntitle: 0-1bfs\nmathjax: true\ndate: 2018-10-19 11:11:08\ntags: 算法\n---\n有用的链接 [0-1bfs](https://www.geeksforgeeks.org/0-1-bfs-shortest-path-binary-graph/)\n求某一个点到其它点的最短距离，类似于dijkstra算法，不过这个图或者树它的每条边的权重都为0或1，所以有更快的\n方法可以解决最短路径问题，可以使用队列去解决这个问题，如果边的权重为0，我们把点放在队首，否则放在队尾。\n```c++\n#include <bits/stdc++.h>\n\nusing namespace std;\n#define SIZE 9\n\nstruct Node{\n    int to, weight;\n};\nvector<Node> edges[SIZE];\n\nvoid zeroOneBFS(int start){\n    int dist[SIZE];\n    for(int i = 0; i < SIZE; i++) dist[i] = INT_MAX;\n    deque<int> Q;\n    dist[start] = 0;\n    Q.push_back(start);\n    while(!Q.empty()){\n        int v = Q.front();\n        Q.pop_front();\n        for(int i = 0; i < edges[v].size(); i++){\n            if(dist[edges[v][i].to] > dist[v] + edges[v][i].weight){\n                dist[edges[v][i].to] = dist[v]+ edges[v][i].weight;\n                if(edges[v][i].weight == 0) Q.push_front(edges[v][i].to);\n                else Q.push_back(edges[v][i].to);\n            }\n        }\n    }\n    for(int i = 0; i < SIZE; i++) cout<<dist[i]<<\" \";\n}\n\nvoid addEdge(int u, int v, int wt){\n    edges[u].push_back({v, wt});\n    edges[v].push_back({u, wt});\n}\n\nint main(){\n\taddEdge(0, 1, 0); \n\taddEdge(0, 7, 1); \n\taddEdge(1, 7, 1); \n\taddEdge(1, 2, 1); \n\taddEdge(2, 3, 0); \n\taddEdge(2, 5, 0); \n\taddEdge(2, 8, 1); \n\taddEdge(3, 4, 1); \n\taddEdge(3, 5, 1); \n\taddEdge(4, 5, 1); \n\taddEdge(5, 6, 1); \n\taddEdge(6, 7, 1); \n\taddEdge(7, 8, 1);\n    zeroOneBFS(0);\n    return 0;\n}\n```\n","slug":"0-1bfs","published":1,"updated":"2018-10-19T03:55:07.029Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oemy001oexpxarg7p4d2","content":"<p>有用的链接 <a href=\"https://www.geeksforgeeks.org/0-1-bfs-shortest-path-binary-graph/\" target=\"_blank\" rel=\"external\">0-1bfs</a><br>求某一个点到其它点的最短距离，类似于dijkstra算法，不过这个图或者树它的每条边的权重都为0或1，所以有更快的<br>方法可以解决最短路径问题，可以使用队列去解决这个问题，如果边的权重为0，我们把点放在队首，否则放在队尾。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SIZE 9</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> to, weight;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">vector</span>&lt;Node&gt; edges[SIZE];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">zeroOneBFS</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> dist[SIZE];</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; SIZE; i++) dist[i] = INT_MAX;</div><div class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; Q;</div><div class=\"line\">    dist[start] = <span class=\"number\">0</span>;</div><div class=\"line\">    Q.push_back(start);</div><div class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> v = Q.front();</div><div class=\"line\">        Q.pop_front();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; edges[v].size(); i++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(dist[edges[v][i].to] &gt; dist[v] + edges[v][i].weight)&#123;</div><div class=\"line\">                dist[edges[v][i].to] = dist[v]+ edges[v][i].weight;</div><div class=\"line\">                <span class=\"keyword\">if</span>(edges[v][i].weight == <span class=\"number\">0</span>) Q.push_front(edges[v][i].to);</div><div class=\"line\">                <span class=\"keyword\">else</span> Q.push_back(edges[v][i].to);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; SIZE; i++) <span class=\"built_in\">cout</span>&lt;&lt;dist[i]&lt;&lt;<span class=\"string\">\" \"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> v, <span class=\"keyword\">int</span> wt)</span></span>&#123;</div><div class=\"line\">    edges[u].push_back(&#123;v, wt&#125;);</div><div class=\"line\">    edges[v].push_back(&#123;u, wt&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\taddEdge(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">0</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    zeroOneBFS(<span class=\"number\">0</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>有用的链接 <a href=\"https://www.geeksforgeeks.org/0-1-bfs-shortest-path-binary-graph/\" target=\"_blank\" rel=\"external\">0-1bfs</a><br>求某一个点到其它点的最短距离，类似于dijkstra算法，不过这个图或者树它的每条边的权重都为0或1，所以有更快的<br>方法可以解决最短路径问题，可以使用队列去解决这个问题，如果边的权重为0，我们把点放在队首，否则放在队尾。<br><figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> SIZE 9</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Node</span>&#123;</span></div><div class=\"line\">    <span class=\"keyword\">int</span> to, weight;</div><div class=\"line\">&#125;;</div><div class=\"line\"><span class=\"built_in\">vector</span>&lt;Node&gt; edges[SIZE];</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">zeroOneBFS</span><span class=\"params\">(<span class=\"keyword\">int</span> start)</span></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> dist[SIZE];</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; SIZE; i++) dist[i] = INT_MAX;</div><div class=\"line\">    <span class=\"built_in\">deque</span>&lt;<span class=\"keyword\">int</span>&gt; Q;</div><div class=\"line\">    dist[start] = <span class=\"number\">0</span>;</div><div class=\"line\">    Q.push_back(start);</div><div class=\"line\">    <span class=\"keyword\">while</span>(!Q.empty())&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> v = Q.front();</div><div class=\"line\">        Q.pop_front();</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; edges[v].size(); i++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(dist[edges[v][i].to] &gt; dist[v] + edges[v][i].weight)&#123;</div><div class=\"line\">                dist[edges[v][i].to] = dist[v]+ edges[v][i].weight;</div><div class=\"line\">                <span class=\"keyword\">if</span>(edges[v][i].weight == <span class=\"number\">0</span>) Q.push_front(edges[v][i].to);</div><div class=\"line\">                <span class=\"keyword\">else</span> Q.push_back(edges[v][i].to);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; SIZE; i++) <span class=\"built_in\">cout</span>&lt;&lt;dist[i]&lt;&lt;<span class=\"string\">\" \"</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> v, <span class=\"keyword\">int</span> wt)</span></span>&#123;</div><div class=\"line\">    edges[u].push_back(&#123;v, wt&#125;);</div><div class=\"line\">    edges[v].push_back(&#123;u, wt&#125;);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span>&#123;</div><div class=\"line\">\taddEdge(<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">0</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">1</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">5</span>, <span class=\"number\">0</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">2</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">3</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">4</span>, <span class=\"number\">5</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">5</span>, <span class=\"number\">6</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">6</span>, <span class=\"number\">7</span>, <span class=\"number\">1</span>); </div><div class=\"line\">\taddEdge(<span class=\"number\">7</span>, <span class=\"number\">8</span>, <span class=\"number\">1</span>);</div><div class=\"line\">    zeroOneBFS(<span class=\"number\">0</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"path","date":"2018-10-22T10:05:29.000Z","_content":"","source":"_posts/2018-10-22-cf1072D.md","raw":"---\ntitle: path\ndate: 2018-10-22 18:05:29\ntags: dp\n---\n","slug":"cf1072D","published":1,"updated":"2018-10-22T10:07:06.627Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oen0001qexpxz57tg5r1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"minimum path","date":"2018-10-22T10:05:29.000Z","_content":"\n刚见这道题时，这场比赛刚刚结束，赛后看了一下，难道是从左下角往右上角dfs，就开始XJBDFS，结果显然是错的。\n看了题解才发现是动态规划。-\\_-动态规划一直都不会，最后终于看懂了题解。\n这道题其实两次对角线遍历，假设坐标原点为左下角的位置，就相当于y=x左右平移。这道题很检验代码水平，功底好很快就写完了\n差的话像我一样写了5个小时。。。。\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar matrix[2050][2050], ans[2050];\nint dp[2050][2050], v[2050][2050];\nint main()\n{\n    int n, k;\n    cin>>n>>k;\n    for(int i = 1; i <= n; i++){scanf(\"%s\", matrix[i]+1);}\n    int a_sum = 0;\n    for(int i = 0; i < 2050; i++) dp[i][0] = dp[0][i] = 1e9;\n    dp[0][1]=dp[1][0]=0;\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= n; j++){\n            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + (matrix[i][j]!='a');\n            if(dp[i][j]<=k) a_sum = max(a_sum, i+j);\n        }\n    }\n    for(int i = 2; i <= a_sum; i++) ans[i] = 'a';\n    vector<pair<int, int>> t;\n    int ii = 0, jj = 1;\n    if(a_sum-2+1 > n) {ii = n; jj = a_sum - n;} \n    else {ii = a_sum-1;}\n    for(;jj <= n && ii >= 1; ii--, jj++) if(dp[ii][jj] == k) v[ii][jj] = 1;\n    if(a_sum == 0) {v[1][1]=1;ans[2] = matrix[1][1];}\n    for(int i = max(3, a_sum+1); i < 2*n + 1; i++){\n        int minn = 'z';\n        int ii = i - 2, jj = 1;\n        if(i-1 > n) {ii = n;jj=i-1-n;}\n        for(; ii >= 1 && jj <= n; ii--, jj++){\n            if(ii < n && v[ii][jj]) minn = min(minn, (int)matrix[ii+1][jj]);\n            if(jj < n && v[ii][jj]) minn = min(minn, (int)matrix[ii][jj+1]);\n        }\n        ans[i]=minn;\n        ii = i - 2, jj = 1;\n        if(i-1 > n) {ii = n;jj=i-1-n;}\n        for(; ii >= 1 && jj <= n; ii--, jj++){\n            if(ii < n && v[ii][jj] && matrix[ii+1][jj] == minn) v[ii+1][jj] = 1;\n            if(jj < n && v[ii][jj] && matrix[ii][jj+1] == minn) v[ii][jj+1] = 1;\n        }\n    }\n    printf(\"%s\\n\", ans+2);\n    return 0;\n}\n```\n","source":"_posts/2018-10-22-path.md","raw":"---\ntitle: minimum path\ndate: 2018-10-22 18:05:29\ntags: dp\n---\n\n刚见这道题时，这场比赛刚刚结束，赛后看了一下，难道是从左下角往右上角dfs，就开始XJBDFS，结果显然是错的。\n看了题解才发现是动态规划。-\\_-动态规划一直都不会，最后终于看懂了题解。\n这道题其实两次对角线遍历，假设坐标原点为左下角的位置，就相当于y=x左右平移。这道题很检验代码水平，功底好很快就写完了\n差的话像我一样写了5个小时。。。。\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nchar matrix[2050][2050], ans[2050];\nint dp[2050][2050], v[2050][2050];\nint main()\n{\n    int n, k;\n    cin>>n>>k;\n    for(int i = 1; i <= n; i++){scanf(\"%s\", matrix[i]+1);}\n    int a_sum = 0;\n    for(int i = 0; i < 2050; i++) dp[i][0] = dp[0][i] = 1e9;\n    dp[0][1]=dp[1][0]=0;\n    for(int i = 1; i <= n; i++){\n        for(int j = 1; j <= n; j++){\n            dp[i][j] = min(dp[i-1][j], dp[i][j-1]) + (matrix[i][j]!='a');\n            if(dp[i][j]<=k) a_sum = max(a_sum, i+j);\n        }\n    }\n    for(int i = 2; i <= a_sum; i++) ans[i] = 'a';\n    vector<pair<int, int>> t;\n    int ii = 0, jj = 1;\n    if(a_sum-2+1 > n) {ii = n; jj = a_sum - n;} \n    else {ii = a_sum-1;}\n    for(;jj <= n && ii >= 1; ii--, jj++) if(dp[ii][jj] == k) v[ii][jj] = 1;\n    if(a_sum == 0) {v[1][1]=1;ans[2] = matrix[1][1];}\n    for(int i = max(3, a_sum+1); i < 2*n + 1; i++){\n        int minn = 'z';\n        int ii = i - 2, jj = 1;\n        if(i-1 > n) {ii = n;jj=i-1-n;}\n        for(; ii >= 1 && jj <= n; ii--, jj++){\n            if(ii < n && v[ii][jj]) minn = min(minn, (int)matrix[ii+1][jj]);\n            if(jj < n && v[ii][jj]) minn = min(minn, (int)matrix[ii][jj+1]);\n        }\n        ans[i]=minn;\n        ii = i - 2, jj = 1;\n        if(i-1 > n) {ii = n;jj=i-1-n;}\n        for(; ii >= 1 && jj <= n; ii--, jj++){\n            if(ii < n && v[ii][jj] && matrix[ii+1][jj] == minn) v[ii+1][jj] = 1;\n            if(jj < n && v[ii][jj] && matrix[ii][jj+1] == minn) v[ii][jj+1] = 1;\n        }\n    }\n    printf(\"%s\\n\", ans+2);\n    return 0;\n}\n```\n","slug":"path","published":1,"updated":"2018-10-22T10:25:28.747Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjnk6oen1001texpx8aa6qxwf","content":"<p>刚见这道题时，这场比赛刚刚结束，赛后看了一下，难道是从左下角往右上角dfs，就开始XJBDFS，结果显然是错的。<br>看了题解才发现是动态规划。-_-动态规划一直都不会，最后终于看懂了题解。<br>这道题其实两次对角线遍历，假设坐标原点为左下角的位置，就相当于y=x左右平移。这道题很检验代码水平，功底好很快就写完了<br>差的话像我一样写了5个小时。。。。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">char</span> matrix[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>], ans[<span class=\"number\">2050</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> dp[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>], v[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n, k;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, matrix[i]+<span class=\"number\">1</span>);&#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> a_sum = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2050</span>; i++) dp[i][<span class=\"number\">0</span>] = dp[<span class=\"number\">0</span>][i] = <span class=\"number\">1e9</span>;</div><div class=\"line\">    dp[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=dp[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)&#123;</div><div class=\"line\">            dp[i][j] = min(dp[i<span class=\"number\">-1</span>][j], dp[i][j<span class=\"number\">-1</span>]) + (matrix[i][j]!=<span class=\"string\">'a'</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(dp[i][j]&lt;=k) a_sum = max(a_sum, i+j);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= a_sum; i++) ans[i] = <span class=\"string\">'a'</span>;</div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; t;</div><div class=\"line\">    <span class=\"keyword\">int</span> ii = <span class=\"number\">0</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(a_sum<span class=\"number\">-2</span>+<span class=\"number\">1</span> &gt; n) &#123;ii = n; jj = a_sum - n;&#125; </div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;ii = a_sum<span class=\"number\">-1</span>;&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(;jj &lt;= n &amp;&amp; ii &gt;= <span class=\"number\">1</span>; ii--, jj++) <span class=\"keyword\">if</span>(dp[ii][jj] == k) v[ii][jj] = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(a_sum == <span class=\"number\">0</span>) &#123;v[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">1</span>;ans[<span class=\"number\">2</span>] = matrix[<span class=\"number\">1</span>][<span class=\"number\">1</span>];&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = max(<span class=\"number\">3</span>, a_sum+<span class=\"number\">1</span>); i &lt; <span class=\"number\">2</span>*n + <span class=\"number\">1</span>; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> minn = <span class=\"string\">'z'</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> ii = i - <span class=\"number\">2</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i<span class=\"number\">-1</span> &gt; n) &#123;ii = n;jj=i<span class=\"number\">-1</span>-n;&#125;</div><div class=\"line\">        <span class=\"keyword\">for</span>(; ii &gt;= <span class=\"number\">1</span> &amp;&amp; jj &lt;= n; ii--, jj++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(ii &lt; n &amp;&amp; v[ii][jj]) minn = min(minn, (<span class=\"keyword\">int</span>)matrix[ii+<span class=\"number\">1</span>][jj]);</div><div class=\"line\">            <span class=\"keyword\">if</span>(jj &lt; n &amp;&amp; v[ii][jj]) minn = min(minn, (<span class=\"keyword\">int</span>)matrix[ii][jj+<span class=\"number\">1</span>]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans[i]=minn;</div><div class=\"line\">        ii = i - <span class=\"number\">2</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i<span class=\"number\">-1</span> &gt; n) &#123;ii = n;jj=i<span class=\"number\">-1</span>-n;&#125;</div><div class=\"line\">        <span class=\"keyword\">for</span>(; ii &gt;= <span class=\"number\">1</span> &amp;&amp; jj &lt;= n; ii--, jj++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(ii &lt; n &amp;&amp; v[ii][jj] &amp;&amp; matrix[ii+<span class=\"number\">1</span>][jj] == minn) v[ii+<span class=\"number\">1</span>][jj] = <span class=\"number\">1</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(jj &lt; n &amp;&amp; v[ii][jj] &amp;&amp; matrix[ii][jj+<span class=\"number\">1</span>] == minn) v[ii][jj+<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, ans+<span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"","more":"<p>刚见这道题时，这场比赛刚刚结束，赛后看了一下，难道是从左下角往右上角dfs，就开始XJBDFS，结果显然是错的。<br>看了题解才发现是动态规划。-_-动态规划一直都不会，最后终于看懂了题解。<br>这道题其实两次对角线遍历，假设坐标原点为左下角的位置，就相当于y=x左右平移。这道题很检验代码水平，功底好很快就写完了<br>差的话像我一样写了5个小时。。。。<br><figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;bits/stdc++.h&gt;</span></span></div><div class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</div><div class=\"line\"><span class=\"keyword\">char</span> matrix[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>], ans[<span class=\"number\">2050</span>];</div><div class=\"line\"><span class=\"keyword\">int</span> dp[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>], v[<span class=\"number\">2050</span>][<span class=\"number\">2050</span>];</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> n, k;</div><div class=\"line\">    <span class=\"built_in\">cin</span>&gt;&gt;n&gt;&gt;k;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;<span class=\"built_in\">scanf</span>(<span class=\"string\">\"%s\"</span>, matrix[i]+<span class=\"number\">1</span>);&#125;</div><div class=\"line\">    <span class=\"keyword\">int</span> a_sum = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">2050</span>; i++) dp[i][<span class=\"number\">0</span>] = dp[<span class=\"number\">0</span>][i] = <span class=\"number\">1e9</span>;</div><div class=\"line\">    dp[<span class=\"number\">0</span>][<span class=\"number\">1</span>]=dp[<span class=\"number\">1</span>][<span class=\"number\">0</span>]=<span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> j = <span class=\"number\">1</span>; j &lt;= n; j++)&#123;</div><div class=\"line\">            dp[i][j] = min(dp[i<span class=\"number\">-1</span>][j], dp[i][j<span class=\"number\">-1</span>]) + (matrix[i][j]!=<span class=\"string\">'a'</span>);</div><div class=\"line\">            <span class=\"keyword\">if</span>(dp[i][j]&lt;=k) a_sum = max(a_sum, i+j);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">2</span>; i &lt;= a_sum; i++) ans[i] = <span class=\"string\">'a'</span>;</div><div class=\"line\">    <span class=\"built_in\">vector</span>&lt;pair&lt;<span class=\"keyword\">int</span>, <span class=\"keyword\">int</span>&gt;&gt; t;</div><div class=\"line\">    <span class=\"keyword\">int</span> ii = <span class=\"number\">0</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(a_sum<span class=\"number\">-2</span>+<span class=\"number\">1</span> &gt; n) &#123;ii = n; jj = a_sum - n;&#125; </div><div class=\"line\">    <span class=\"keyword\">else</span> &#123;ii = a_sum<span class=\"number\">-1</span>;&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(;jj &lt;= n &amp;&amp; ii &gt;= <span class=\"number\">1</span>; ii--, jj++) <span class=\"keyword\">if</span>(dp[ii][jj] == k) v[ii][jj] = <span class=\"number\">1</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span>(a_sum == <span class=\"number\">0</span>) &#123;v[<span class=\"number\">1</span>][<span class=\"number\">1</span>]=<span class=\"number\">1</span>;ans[<span class=\"number\">2</span>] = matrix[<span class=\"number\">1</span>][<span class=\"number\">1</span>];&#125;</div><div class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = max(<span class=\"number\">3</span>, a_sum+<span class=\"number\">1</span>); i &lt; <span class=\"number\">2</span>*n + <span class=\"number\">1</span>; i++)&#123;</div><div class=\"line\">        <span class=\"keyword\">int</span> minn = <span class=\"string\">'z'</span>;</div><div class=\"line\">        <span class=\"keyword\">int</span> ii = i - <span class=\"number\">2</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i<span class=\"number\">-1</span> &gt; n) &#123;ii = n;jj=i<span class=\"number\">-1</span>-n;&#125;</div><div class=\"line\">        <span class=\"keyword\">for</span>(; ii &gt;= <span class=\"number\">1</span> &amp;&amp; jj &lt;= n; ii--, jj++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(ii &lt; n &amp;&amp; v[ii][jj]) minn = min(minn, (<span class=\"keyword\">int</span>)matrix[ii+<span class=\"number\">1</span>][jj]);</div><div class=\"line\">            <span class=\"keyword\">if</span>(jj &lt; n &amp;&amp; v[ii][jj]) minn = min(minn, (<span class=\"keyword\">int</span>)matrix[ii][jj+<span class=\"number\">1</span>]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        ans[i]=minn;</div><div class=\"line\">        ii = i - <span class=\"number\">2</span>, jj = <span class=\"number\">1</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span>(i<span class=\"number\">-1</span> &gt; n) &#123;ii = n;jj=i<span class=\"number\">-1</span>-n;&#125;</div><div class=\"line\">        <span class=\"keyword\">for</span>(; ii &gt;= <span class=\"number\">1</span> &amp;&amp; jj &lt;= n; ii--, jj++)&#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(ii &lt; n &amp;&amp; v[ii][jj] &amp;&amp; matrix[ii+<span class=\"number\">1</span>][jj] == minn) v[ii+<span class=\"number\">1</span>][jj] = <span class=\"number\">1</span>;</div><div class=\"line\">            <span class=\"keyword\">if</span>(jj &lt; n &amp;&amp; v[ii][jj] &amp;&amp; matrix[ii][jj+<span class=\"number\">1</span>] == minn) v[ii][jj+<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>, ans+<span class=\"number\">2</span>);</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cjnk6oelx0000expxj3vhs9si","category_id":"cjnk6oem40004expxm1jdddru","_id":"cjnk6oemd000fexpx74icdkrf"},{"post_id":"cjnk6oem20002expxdd8pkool","category_id":"cjnk6oema000bexpxh4xl25s5","_id":"cjnk6oemg000mexpx8owkfzh1"},{"post_id":"cjnk6oem70008expx6paa83du","category_id":"cjnk6oemd000gexpxidgararp","_id":"cjnk6oemo0010expx4dg0y22g"},{"post_id":"cjnk6oem70008expx6paa83du","category_id":"cjnk6oemh000qexpxwjqk2aa0","_id":"cjnk6oemp0013expx4xqe8qxp"},{"post_id":"cjnk6oemf000kexpxpk2bv3l4","category_id":"cjnk6oeml000vexpx0m355t43","_id":"cjnk6oemr0018expx47ow7l0y"},{"post_id":"cjnk6oemh000oexpxz517eiz2","category_id":"cjnk6oemo0012expxej9av2ae","_id":"cjnk6oemt001eexpxkhw1g3a0"},{"post_id":"cjnk6oemi000rexpxvn7u95z1","category_id":"cjnk6oemr0019expxxnaj9y63","_id":"cjnk6oemv001iexpxaeeuxjta"}],"PostTag":[{"post_id":"cjnk6oelx0000expxj3vhs9si","tag_id":"cjnk6oem50005expx6f3sx0zf","_id":"cjnk6oemf000jexpxn7yi2bxg"},{"post_id":"cjnk6oelx0000expxj3vhs9si","tag_id":"cjnk6oema000cexpxhcrbdasx","_id":"cjnk6oemg000lexpxkbk3inp5"},{"post_id":"cjnk6oem70008expx6paa83du","tag_id":"cjnk6oemd000hexpxr5h0mobl","_id":"cjnk6oemh000pexpxuiu3dcbp"},{"post_id":"cjnk6oem9000aexpx709fffwy","tag_id":"cjnk6oemg000nexpx1wkas86d","_id":"cjnk6oemk000uexpxdpffpz0x"},{"post_id":"cjnk6oemb000dexpxgrl0sci9","tag_id":"cjnk6oemg000nexpx1wkas86d","_id":"cjnk6oemn000zexpxxw44t0ij"},{"post_id":"cjnk6oemc000eexpxelb6siw5","tag_id":"cjnk6oemg000nexpx1wkas86d","_id":"cjnk6oemq0016expxrevseuft"},{"post_id":"cjnk6oeme000iexpxvhmmajbf","tag_id":"cjnk6oemg000nexpx1wkas86d","_id":"cjnk6oems001cexpxnxm3vbu8"},{"post_id":"cjnk6oemf000kexpxpk2bv3l4","tag_id":"cjnk6oemr001aexpxrtfu0nkw","_id":"cjnk6oen0001pexpxk4dsku6z"},{"post_id":"cjnk6oemf000kexpxpk2bv3l4","tag_id":"cjnk6oemu001gexpx31ihpmy9","_id":"cjnk6oen1001rexpx2ovk3ymf"},{"post_id":"cjnk6oemf000kexpxpk2bv3l4","tag_id":"cjnk6oemw001kexpx2a48m74s","_id":"cjnk6oen2001uexpxh6zyykga"},{"post_id":"cjnk6oemh000oexpxz517eiz2","tag_id":"cjnk6oemy001nexpx865ywrzd","_id":"cjnk6oen2001vexpx319i97a5"},{"post_id":"cjnk6oemq0017expx5hgyihrh","tag_id":"cjnk6oen1001sexpx3awq9ogm","_id":"cjnk6oen3001xexpx4vn1bndw"},{"post_id":"cjnk6oemr001bexpxrf6r7gml","tag_id":"cjnk6oen3001wexpxzvqgp6vd","_id":"cjnk6oen3001zexpx0zi0eyzs"},{"post_id":"cjnk6oemw001lexpx9xu9u4v8","tag_id":"cjnk6oen3001yexpxld2lhtm0","_id":"cjnk6oen40021expx5ys2s0pm"},{"post_id":"cjnk6oemx001mexpxet5wt3mu","tag_id":"cjnk6oen30020expxr37oolch","_id":"cjnk6oen40023expxnq8v7u44"},{"post_id":"cjnk6oemy001oexpxarg7p4d2","tag_id":"cjnk6oen40022expx84wt2cd0","_id":"cjnk6oen40025expx86hldcpl"},{"post_id":"cjnk6oen0001qexpxz57tg5r1","tag_id":"cjnk6oen40024expxxen0woka","_id":"cjnk6oen50027expxkwujmf36"},{"post_id":"cjnk6oen1001texpx8aa6qxwf","tag_id":"cjnk6oen40024expxxen0woka","_id":"cjnk6oen50028expx46b3tlag"}],"Tag":[{"name":"技术","_id":"cjnk6oem50005expx6f3sx0zf"},{"name":"概念","_id":"cjnk6oema000cexpxhcrbdasx"},{"name":"软件工程","_id":"cjnk6oemd000hexpxr5h0mobl"},{"name":"数字图像处理","_id":"cjnk6oemg000nexpx1wkas86d"},{"name":"python3","_id":"cjnk6oemr001aexpxrtfu0nkw"},{"name":"opencv3","_id":"cjnk6oemu001gexpx31ihpmy9"},{"name":"matplotlib","_id":"cjnk6oemw001kexpx2a48m74s"},{"name":"记录","_id":"cjnk6oemy001nexpx865ywrzd"},{"name":"工具","_id":"cjnk6oen1001sexpx3awq9ogm"},{"name":"docker","_id":"cjnk6oen3001wexpxzvqgp6vd"},{"name":"语言","_id":"cjnk6oen3001yexpxld2lhtm0"},{"name":"心情记录","_id":"cjnk6oen30020expxr37oolch"},{"name":"算法","_id":"cjnk6oen40022expx84wt2cd0"},{"name":"dp","_id":"cjnk6oen40024expxxen0woka"}]}}